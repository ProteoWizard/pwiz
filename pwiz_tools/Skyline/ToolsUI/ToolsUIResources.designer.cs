//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pwiz.Skyline.ToolsUI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ToolsUIResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ToolsUIResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("pwiz.Skyline.ToolsUI.ToolsUIResources", typeof(ToolsUIResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string ConfigureToolsDlg_AddFromFile_Cancel {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_AddFromFile_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must save changes before installing tools. Would you like to save changes?.
        /// </summary>
        public static string ConfigureToolsDlg_AddFromFile_You_must_save_changes_before_installing_tools__Would_you_like_to_save_changes_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_AddFromFile_You_must_save_changes_before_installing_tools__Woul" +
                        "d_you_like_to_save_changes_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Files.
        /// </summary>
        public static string ConfigureToolsDlg_AddFromFile_Zip_Files {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_AddFromFile_Zip_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contacting the server.
        /// </summary>
        public static string ConfigureToolsDlg_AddFromWeb_Contacting_the_server {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_AddFromWeb_Contacting_the_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error connecting to the tool store.
        /// </summary>
        public static string ConfigureToolsDlg_AddFromWeb_Unknown_error_connecting_to_the_tool_store {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_AddFromWeb_Unknown_error_connecting_to_the_tool_store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Executables.
        /// </summary>
        public static string ConfigureToolsDlg_btnFindCommand_Click_All_Executables {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_btnFindCommand_Click_All_Executables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch Files.
        /// </summary>
        public static string ConfigureToolsDlg_btnFindCommand_Click_Batch_Files {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_btnFindCommand_Click_Batch_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command Files.
        /// </summary>
        public static string ConfigureToolsDlg_btnFindCommand_Click_Command_Files {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_btnFindCommand_Click_Command_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information Files.
        /// </summary>
        public static string ConfigureToolsDlg_btnFindCommand_Click_Information_Files {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_btnFindCommand_Click_Information_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perl Scripts.
        /// </summary>
        public static string ConfigureToolsDlg_btnFindCommand_Click_Perl_Scripts {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_btnFindCommand_Click_Perl_Scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python Scripts.
        /// </summary>
        public static string ConfigureToolsDlg_btnFindCommand_Click_Python_Scripts {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_btnFindCommand_Click_Python_Scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: if you would like the command to launch a link, make sure to include http:// or https://.
        /// </summary>
        public static string ConfigureToolsDlg_CheckPassTool__Note__if_you_would_like_the_command_to_launch_a_link__make_sure_to_include_http____or_https___ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_CheckPassTool__Note__if_you_would_like_the_command_to_launch_a_" +
                        "link__make_sure_to_include_http____or_https___", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a report or remove {0} from arguments..
        /// </summary>
        public static string ConfigureToolsDlg_CheckPassToolInternal_Please_select_a_report_or_remove__0__from_arguments_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_CheckPassToolInternal_Please_select_a_report_or_remove__0__from" +
                        "_arguments_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a valid URL..
        /// </summary>
        public static string ConfigureToolsDlg_CheckPassToolInternal_Please_specify_a_valid_URL_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_CheckPassToolInternal_Please_specify_a_valid_URL_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tool titles must be unique, please enter a unique title for this tool..
        /// </summary>
        public static string ConfigureToolsDlg_CheckPassToolInternal_Tool_titles_must_be_unique__please_enter_a_unique_title_for_this_tool_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_CheckPassToolInternal_Tool_titles_must_be_unique__please_enter_" +
                        "a_unique_title_for_this_tool_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have provided {0} as an argument but have not selected a report..
        /// </summary>
        public static string ConfigureToolsDlg_CheckPassToolInternal_You_have_provided__0__as_an_argument_but_have_not_selected_a_report_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_CheckPassToolInternal_You_have_provided__0__as_an_argument_but_" +
                        "have_not_selected_a_report_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An annotation with the following name already exists:.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteAnnotations_An_annotation_with_the_following_name_already_exists_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteAnnotations_An_annotation_with_the_following_name_alre" +
                        "ady_exists_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotations with the following names already exist:.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteAnnotations_Annotations_with_the_following_names_already_exist_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteAnnotations_Annotations_with_the_following_names_alrea" +
                        "dy_exist_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to overwrite or keep the existing annotations?.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteAnnotations_Do_you_want_to_overwrite_or_keep_the_existing_annotations_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteAnnotations_Do_you_want_to_overwrite_or_keep_the_exist" +
                        "ing_annotations_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep Existing.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteAnnotations_Keep_Existing {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteAnnotations_Keep_Existing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In Parallel.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteOrInParallel_In_Parallel {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteOrInParallel_In_Parallel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteOrInParallel_Overwrite {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteOrInParallel_Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reinstall.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteOrInParallel_Reinstall {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteOrInParallel_Reinstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tool {0} is in conflict with the new installation.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteOrInParallel_The_tool__0__is_in_conflict_with_the_new_installation {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteOrInParallel_The_tool__0__is_in_conflict_with_the_new_" +
                        "installation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation would modify the following reports.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteOrInParallel_This_installation_would_modify_the_following_reports {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteOrInParallel_This_installation_would_modify_the_follow" +
                        "ing_reports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string ConfigureToolsDlg_OverwriteOrInParallel_Upgrade {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_OverwriteOrInParallel_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments collected at run time.
        /// </summary>
        public static string ConfigureToolsDlg_PopulateMacroDropdown_Arguments_collected_at_run_time {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_PopulateMacroDropdown_Arguments_collected_at_run_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to N/A.
        /// </summary>
        public static string ConfigureToolsDlg_PopulateMacroDropdown_N_A {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_PopulateMacroDropdown_N_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Command:.
        /// </summary>
        public static string ConfigureToolsDlg_textCommand_TextChanged__Command_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_textCommand_TextChanged__Command_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Query params:.
        /// </summary>
        public static string ConfigureToolsDlg_textCommand_TextChanged__Query_params_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_textCommand_TextChanged__Query_params_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A&amp;rguments:.
        /// </summary>
        public static string ConfigureToolsDlg_textCommand_TextChanged_A_rguments_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_textCommand_TextChanged_A_rguments_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to U&amp;RL:.
        /// </summary>
        public static string ConfigureToolsDlg_textCommand_TextChanged_U_RL_ {
            get {
                return ResourceManager.GetString("ConfigureToolsDlg_textCommand_TextChanged_U_RL_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color scheme &apos;{0}&apos; already exists..
        /// </summary>
        public static string EditCustomThemeDlg_buttonSave_Click_The_color_scheme___0___already_exists_ {
            get {
                return ResourceManager.GetString("EditCustomThemeDlg_buttonSave_Click_The_color_scheme___0___already_exists_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colors must be entered in HEX or RGB format..
        /// </summary>
        public static string EditCustomThemeDlg_dataGridViewColors_DataError_Colors_must_be_entered_in_HEX_or_RGB_format_ {
            get {
                return ResourceManager.GetString("EditCustomThemeDlg_dataGridViewColors_DataError_Colors_must_be_entered_in_HEX_or_" +
                        "RGB_format_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the color &apos;{0}&apos;. Use HEX or RGB format..
        /// </summary>
        public static string EditCustomThemeDlg_DoPaste_Unable_to_parse_the_color___0____Use_HEX_or_RGB_format_ {
            get {
                return ResourceManager.GetString("EditCustomThemeDlg_DoPaste_Unable_to_parse_the_color___0____Use_HEX_or_RGB_format" +
                        "_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings are correct.
        /// </summary>
        public static string EditRemoteAccountDlg_TestSettings_Settings_are_correct {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_TestSettings_Settings_are_correct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to authenticate..
        /// </summary>
        public static string EditRemoteAccountDlg_TestUnifiAccount_An_error_occurred_while_trying_to_authenticate_ {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_TestUnifiAccount_An_error_occurred_while_trying_to_authentic" +
                        "ate_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred while trying to fetch the directory listing..
        /// </summary>
        public static string EditRemoteAccountDlg_TestUnifiAccount_An_exception_occurred_while_trying_to_fetch_the_directory_listing_ {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_TestUnifiAccount_An_exception_occurred_while_trying_to_fetch" +
                        "_the_directory_listing_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server URL..
        /// </summary>
        public static string EditRemoteAccountDlg_ValidateValues_Invalid_server_URL_ {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_ValidateValues_Invalid_server_URL_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server cannot be blank.
        /// </summary>
        public static string EditRemoteAccountDlg_ValidateValues_Server_cannot_be_blank {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_ValidateValues_Server_cannot_be_blank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server URL must start with https:// or http://.
        /// </summary>
        public static string EditRemoteAccountDlg_ValidateValues_Server_URL_must_start_with_https____or_http___ {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_ValidateValues_Server_URL_must_start_with_https____or_http__" +
                        "_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already an account defined for the user {0} on the server {1}.
        /// </summary>
        public static string EditRemoteAccountDlg_ValidateValues_There_is_already_an_account_defined_for_the_user__0__on_the_server__1_ {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_ValidateValues_There_is_already_an_account_defined_for_the_u" +
                        "ser__0__on_the_server__1_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username cannot be blank.
        /// </summary>
        public static string EditRemoteAccountDlg_ValidateValues_Username_cannot_be_blank {
            get {
                return ResourceManager.GetString("EditRemoteAccountDlg_ValidateValues_Username_cannot_be_blank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid email address..
        /// </summary>
        public static string EditServerDlg_OkDialog__0__is_not_a_valid_email_address_ {
            get {
                return ResourceManager.GetString("EditServerDlg_OkDialog__0__is_not_a_valid_email_address_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying server information..
        /// </summary>
        public static string EditServerDlg_OkDialog_Verifying_server_information {
            get {
                return ResourceManager.GetString("EditServerDlg_OkDialog_Verifying_server_information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add spectral library.
        /// </summary>
        public static string LibrarySpec_Add_spectral_library {
            get {
                return ResourceManager.GetString("LibrarySpec_Add_spectral_library", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized library type at {0}.
        /// </summary>
        public static string LibrarySpec_CreateFromPath_Unrecognized_library_type_at__0_ {
            get {
                return ResourceManager.GetString("LibrarySpec_CreateFromPath_Unrecognized_library_type_at__0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing Packages.
        /// </summary>
        public static string PythonInstaller_GetPackages_Installing_Packages {
            get {
                return ResourceManager.GetString("PythonInstaller_GetPackages_Installing_Packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing Pip.
        /// </summary>
        public static string PythonInstaller_GetPip_Installing_Pip {
            get {
                return ResourceManager.GetString("PythonInstaller_GetPip_Installing_Pip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing Python.
        /// </summary>
        public static string PythonInstaller_GetPython_Installing_Python {
            get {
                return ResourceManager.GetString("PythonInstaller_GetPython_Installing_Python", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string PythonInstaller_InstallPackages_Install {
            get {
                return ResourceManager.GetString("PythonInstaller_InstallPackages_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing Packages.
        /// </summary>
        public static string RInstaller_GetPAckages_Installing_Packages {
            get {
                return ResourceManager.GetString("RInstaller_GetPAckages_Installing_Packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing R.
        /// </summary>
        public static string RInstaller_GetR_Installing_R {
            get {
                return ResourceManager.GetString("RInstaller_GetR_Installing_R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to connect to the website {0}.
        /// </summary>
        public static string RInstaller_InstallPackages_Error__Failed_to_connect_to_the_website__0_ {
            get {
                return ResourceManager.GetString("RInstaller_InstallPackages_Error__Failed_to_connect_to_the_website__0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package {0} failed to install:.
        /// </summary>
        public static string RInstaller_InstallPackages_The_package__0__failed_to_install_ {
            get {
                return ResourceManager.GetString("RInstaller_InstallPackages_The_package__0__failed_to_install_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading R.
        /// </summary>
        public static string RInstaller_InstallR_Downloading_R {
            get {
                return ResourceManager.GetString("RInstaller_InstallR_Downloading_R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find a file with that identifier..
        /// </summary>
        public static string TestToolStoreClient_GetToolZipFile_Cannot_find_a_file_with_that_identifier_ {
            get {
                return ResourceManager.GetString("TestToolStoreClient_GetToolZipFile_Cannot_find_a_file_with_that_identifier_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error running the installed tool {0}. The method &apos;{1}&apos; has the wrong signature..
        /// </summary>
        public static string ToolDescription_CallArgsCollector_Error_running_the_installed_tool__0___The_method___1___has_the_wrong_signature_ {
            get {
                return ResourceManager.GetString("ToolDescription_CallArgsCollector_Error_running_the_installed_tool__0___The_metho" +
                        "d___1___has_the_wrong_signature_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find any CollectArgs method to call on class &apos;{0}&apos;..
        /// </summary>
        public static string ToolDescription_FindArgsCollectorMethod_Unable_to_find_any_CollectArgs_method_to_call_on_class___0___ {
            get {
                return ResourceManager.GetString("ToolDescription_FindArgsCollectorMethod_Unable_to_find_any_CollectArgs_method_to_" +
                        "call_on_class___0___", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tool {0} had an error..
        /// </summary>
        public static string ToolDescription_RunExecutableBackground_The_tool__0__had_an_error_ {
            get {
                return ResourceManager.GetString("ToolDescription_RunExecutableBackground_The_tool__0__had_an_error_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please reconfigure that tool, it failed to execute. .
        /// </summary>
        public static string ToolDescription_RunTool_Please_reconfigure_that_tool__it_failed_to_execute__ {
            get {
                return ResourceManager.GetString("ToolDescription_RunTool_Please_reconfigure_that_tool__it_failed_to_execute__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server returned an invalid response. It might be down for maintenance. Please check the Tool Store on the skyline.ms website..
        /// </summary>
        public static string ToolInstallUI_InstallZipFromWeb_The_server_returned_an_invalid_response__It_might_be_down_for_maintenance__Please_check_the_Tool_Store_on_the_skyline_ms_website_ {
            get {
                return ResourceManager.GetString("ToolInstallUI_InstallZipFromWeb_The_server_returned_an_invalid_response__It_might" +
                        "_be_down_for_maintenance__Please_check_the_Tool_Store_on_the_skyline_ms_website_" +
                        "", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to clear all saved settings? This will immediately return {0} to its original configuration and cannot be undone..
        /// </summary>
        public static string ToolOptionsUI_btnResetSettings_Click_Are_you_sure_you_want_to_clear_all_saved_settings__This_will_immediately_return__0__to_its_original_configuration_and_cannot_be_undone_ {
            get {
                return ResourceManager.GetString("ToolOptionsUI_btnResetSettings_Click_Are_you_sure_you_want_to_clear_all_saved_set" +
                        "tings__This_will_immediately_return__0__to_its_original_configuration_and_cannot" +
                        "_be_undone_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default ({0}).
        /// </summary>
        public static string ToolOptionsUI_ToolOptionsUI_Default___0__ {
            get {
                return ResourceManager.GetString("ToolOptionsUI_ToolOptionsUI_Default___0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported element {0}.
        /// </summary>
        public static string ToolService_DeleteElementsNow_Unsupported_element__0_ {
            get {
                return ResourceManager.GetString("ToolService_DeleteElementsNow_Unsupported_element__0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported element type &apos;{0}&apos;.
        /// </summary>
        public static string ToolService_GetSelectedElementRefNow_Unsupported_element_type___0__ {
            get {
                return ResourceManager.GetString("ToolService_GetSelectedElementRefNow_Unsupported_element_type___0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert proteins.
        /// </summary>
        public static string ToolService_ImportFasta_Insert_proteins {
            get {
                return ResourceManager.GetString("ToolService_ImportFasta_Insert_proteins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import peak boundaries from external tool.
        /// </summary>
        public static string ToolService_ImportPeakBoundaries_Import_peak_boundaries_from_external_tool {
            get {
                return ResourceManager.GetString("ToolService_ImportPeakBoundaries_Import_peak_boundaries_from_external_tool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Properties from external tool.
        /// </summary>
        public static string ToolService_ImportProperties_Import_Properties_from_external_tool {
            get {
                return ResourceManager.GetString("ToolService_ImportProperties_Import_Properties_from_external_tool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading {0}.
        /// </summary>
        public static string ToolStoreDlg_DownloadSelectedTool_Downloading__0_ {
            get {
                return ResourceManager.GetString("ToolStoreDlg_DownloadSelectedTool_Downloading__0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently installed and fully updated (Version: {0})..
        /// </summary>
        public static string ToolStoreDlg_FormatVersionText_Currently_installed_and_fully_updated__Version___0___ {
            get {
                return ResourceManager.GetString("ToolStoreDlg_FormatVersionText_Currently_installed_and_fully_updated__Version___0" +
                        "___", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not currently installed. Version: {0} is available.
        /// </summary>
        public static string ToolStoreDlg_FormatVersionText_Not_currently_installed__Version___0__is_available {
            get {
                return ResourceManager.GetString("ToolStoreDlg_FormatVersionText_Not_currently_installed__Version___0__is_available" +
                        "", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} currently installed. Version {1} is available..
        /// </summary>
        public static string ToolStoreDlg_FormatVersionText_Version__0__currently_installed__Version__1__is_available_ {
            get {
                return ResourceManager.GetString("ToolStoreDlg_FormatVersionText_Version__0__currently_installed__Version__1__is_av" +
                        "ailable_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string ToolStoreDlg_UpdateDisplayedTool_Install {
            get {
                return ResourceManager.GetString("ToolStoreDlg_UpdateDisplayedTool_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reinstall.
        /// </summary>
        public static string ToolStoreDlg_UpdateDisplayedTool_Reinstall {
            get {
                return ResourceManager.GetString("ToolStoreDlg_UpdateDisplayedTool_Reinstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string ToolStoreDlg_UpdateDisplayedTool_Update {
            get {
                return ResourceManager.GetString("ToolStoreDlg_UpdateDisplayedTool_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading Updates.
        /// </summary>
        public static string ToolUpdatesDlg_GetTools_Downloading_Updates {
            get {
                return ResourceManager.GetString("ToolUpdatesDlg_GetTools_Downloading_Updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading Updates.
        /// </summary>
        public static string ToolUpdatesDlg_GetToolsToUpdate_Downloading_Updates {
            get {
                return ResourceManager.GetString("ToolUpdatesDlg_GetToolsToUpdate_Downloading_Updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing updates to {0}.
        /// </summary>
        public static string ToolUpdatesDlg_InstallUpdates_Installing_updates_to__0_ {
            get {
                return ResourceManager.GetString("ToolUpdatesDlg_InstallUpdates_Installing_updates_to__0_", resourceCulture);
            }
        }
    }
}
