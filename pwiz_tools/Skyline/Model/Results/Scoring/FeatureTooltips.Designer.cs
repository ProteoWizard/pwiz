//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pwiz.Skyline.Model.Results.Scoring {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FeatureTooltips {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FeatureTooltips() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("pwiz.Skyline.Model.Results.Scoring.FeatureTooltips", typeof(FeatureTooltips).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest co-elution score of analyte precursors weighted by the sum of the transition areas.
        /// </summary>
        internal static string Co_elution__weighted_ {
            get {
                return ResourceManager.GetString("Co-elution (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fraction of transition peaks across all precursors for which &quot;Coeluting&quot; is true.
        /// </summary>
        internal static string Co_elution_count {
            get {
                return ResourceManager.GetString("Co-elution count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest co-elution score weighted by the sum of the transition areas.
        ///Calculated using internal standard precursors if they exist, otherwise analyte precursors..
        /// </summary>
        internal static string Default_co_elution__weighted_ {
            get {
                return ResourceManager.GetString("Default co-elution (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fraction of transition peaks for which &quot;Coeluting&quot; is true.
        ///Calculated using internal standard precursors if they exist, otherwise analyte precursors..
        /// </summary>
        internal static string Default_co_elution_count {
            get {
                return ResourceManager.GetString("Default co-elution count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalized contrast angle of MS2 transition areas against library intensities, if that exist.
        ///Otherwise, dot product of MS1 transition areas against predicted isotope distribution.
        ///Calculated using internal standard precursors if they exist, otherwise analyte precursors..
        /// </summary>
        internal static string Default_dotp_or_idotp {
            get {
                return ResourceManager.GetString("Default dotp or idotp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log10 of the sum of the transition peak areas.
        ///Calculated using internal standard precursors if they exist, otherwise analyte precursors..
        /// </summary>
        internal static string Default_Intensity {
            get {
                return ResourceManager.GetString("Default Intensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest shape score, weighted by the sum of the transition peak areas.
        ///Calculated using internal standard precursors if they exist, otherwise analyte precursors..
        /// </summary>
        internal static string Default_shape__weighted_ {
            get {
                return ResourceManager.GetString("Default shape (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A score of 1 or 0 depending on whether the peak overlaps with the retention time of an MS/MS identification..
        /// </summary>
        internal static string Identified_count {
            get {
                return ResourceManager.GetString("Identified count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log10 of the sum of the transition peak areas across analyte precursors..
        /// </summary>
        internal static string Intensity {
            get {
                return ResourceManager.GetString("Intensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalized contrast angle of MS2 transition areas against library intensities.
        ///Calculated using analyte precursors..
        /// </summary>
        internal static string Library_intensity_dot_product {
            get {
                return ResourceManager.GetString("Library intensity dot-product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalized contrast angle of the MS1 transition areas against the predicted isotope distribution.
        ///Calculated using analyte precursor with the highest score..
        /// </summary>
        internal static string Precursor_isotope_dot_product {
            get {
                return ResourceManager.GetString("Precursor isotope dot product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average mass error across analyte MS1 transitions weighted by transition area..
        /// </summary>
        internal static string Precursor_mass_error {
            get {
                return ResourceManager.GetString("Precursor mass error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shape correlation score between MS1 ions and MS2 ions.
        ///Calculated using internal standard precursors if they exist, otherwise analyte precursors..
        /// </summary>
        internal static string Precursor_product_shape_score {
            get {
                return ResourceManager.GetString("Precursor-product shape score", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average mass error across analyte MS2 transitions weighted by transition area..
        /// </summary>
        internal static string Product_mass_error {
            get {
                return ResourceManager.GetString("Product mass error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest co elution score, weighted by the sum of the transition peak areas..
        /// </summary>
        internal static string Reference_co_elution__weighted_ {
            get {
                return ResourceManager.GetString("Reference co-elution (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fraction of transitions across internal standard precursors for which &quot;Coeluting&quot; is true..
        /// </summary>
        internal static string Reference_co_elution_count {
            get {
                return ResourceManager.GetString("Reference co-elution count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalized contrast angle of the correlation between analyte and internal standard transition peak areas..
        /// </summary>
        internal static string Reference_intensity_dot_product {
            get {
                return ResourceManager.GetString("Reference intensity dot-product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest shape score, weighted by the sum of the transition peak areas..
        /// </summary>
        internal static string Reference_shape__weighted_ {
            get {
                return ResourceManager.GetString("Reference shape (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Difference between predicted retention time and peak apex time..
        /// </summary>
        internal static string Retention_time_difference {
            get {
                return ResourceManager.GetString("Retention time difference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Square of difference between predicted retention time and peak apex time..
        /// </summary>
        internal static string Retention_time_squared_difference {
            get {
                return ResourceManager.GetString("Retention time squared difference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest shape score, weighted by the sum of the transition peak areas.
        ///Calculated using analyte precursors..
        /// </summary>
        internal static string Shape__weighted_ {
            get {
                return ResourceManager.GetString("Shape (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log of the ratio of the peak height to the median intensity beyond the bounds of the peak.
        ///Calculated using analyte precursors..
        /// </summary>
        internal static string Signal_to_noise {
            get {
                return ResourceManager.GetString("Signal to noise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest co elution score, weighted by the sum of the transition peak areas.
        ///Calculated using internal standard precursors..
        /// </summary>
        internal static string Standard_co_elution__weighted_ {
            get {
                return ResourceManager.GetString("Standard co-elution (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log10 of the sum of the transition peak areas across internal standard precursors..
        /// </summary>
        internal static string Standard_Intensity {
            get {
                return ResourceManager.GetString("Standard Intensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalized contrast angle of MS2 transition areas against library intensities.
        ///Calculated using internal standard precursors..
        /// </summary>
        internal static string Standard_library_dot_product {
            get {
                return ResourceManager.GetString("Standard library dot-product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average mass error across internal standard MS2 transitions weighted by transition area..
        /// </summary>
        internal static string Standard_product_mass_error {
            get {
                return ResourceManager.GetString("Standard product mass error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQuest shape score, weighted by the sum of the transition peak areas.
        ///Calculated using internal standard precursors..
        /// </summary>
        internal static string Standard_shape__weighted_ {
            get {
                return ResourceManager.GetString("Standard shape (weighted)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log of the ratio of the peak height to the median intensity beyond the bounds of the peak.
        ///Calculated using internal standard precursors..
        /// </summary>
        internal static string Standard_signal_to_noise {
            get {
                return ResourceManager.GetString("Standard signal to noise", resourceCulture);
            }
        }
    }
}
