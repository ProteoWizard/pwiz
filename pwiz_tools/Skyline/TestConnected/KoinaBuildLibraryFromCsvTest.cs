using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using pwiz.Common.SystemUtil;
using pwiz.Skyline;
using pwiz.Skyline.Model;
using pwiz.Skyline.Model.Lib;
using pwiz.SkylineTestUtil;
using pwiz.Skyline.Model.Koina.Models;
using pwiz.Skyline.Properties;
using pwiz.Skyline.Util;
using pwiz.Skyline.Util.Extensions;

namespace pwiz.SkylineTestConnected
{
    [TestClass]
    public class KoinaBuildLibraryFromCsvTest : AbstractUnitTestEx
    {
        const string TEST_ZIP_PATH = @"Test\PredictionBuildLibraryFromCsvTest.zip";

        [TestMethod, NoParallelTesting(TestExclusionReason.DOCKER_ROOT_CERTS)]
        public void TestKoinaBuildLibraryFromCsv()
        {
            if (!HasKoinaServer())
                return;

            TestAllPredictionModels();
        }

        public class PredictionTest
        {
            public PredictionTest(string peptideModSeq, int precursorCharge, double nce, double precursorMz,
                double retentionTime, double[] peakMZs = null, double[] peakIntensities = null)
            {
                PeptideModSeq = peptideModSeq;
                PrecursorCharge = precursorCharge;
                NCE = nce;
                PrecursorMz = precursorMz;
                RetentionTime = retentionTime;
                if (peakMZs != null && peakIntensities != null)
                    Peaks = peakMZs.Zip(peakIntensities,
                        (m, i) => new SpectrumPeaksInfo.MI { Mz = m, Intensity = (float)i }).ToArray();
            }

            public string PeptideModSeq { get; }
            public int PrecursorCharge { get; }
            public double NCE { get; }
            public double PrecursorMz { get; }

            public double RetentionTime { get; }
            public SpectrumPeaksInfo.MI[] Peaks { get; }
        }


        private Dictionary<string, IList<PredictionTest>> PredictionTestsByModel = new Dictionary<string, IList<PredictionTest>>()
        {
            {"Prosit_2019_intensity-Prosit_2019_irt", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 45.2506713867188,
                    new [] { 175.11895, 189.08698, 203.10263, 254.60723, 290.13466, 306.15944, 377.16669, 382.16492, 437.19992, 439.67839, 508.20717, 552.22686, 623.23412, 642.75450, 666.26979, 763.32256, 878.34950, 1009.38998, 1096.42201, 1183.45404, 1284.50172 },
                    new [] { 000.06258, 000.00162, 000.19044, 000.00050, 000.01341, 000.02467, 000.01144, 000.04225, 000.09368, 000.01275, 000.00573, 000.02851, 000.01006, 000.00096, 000.03697, 001.00000, 000.28940, 0000.14863, 0000.17431, 0000.37008, 0000.00406 }),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 58.0482025146484,
                    new [] { 74.06004, 147.11280, 210.11809, 261.15975, 267.13955, 294.18122, 348.19178, 397.20490, 419.22890, 422.27618, 453.74693, 510.76839, 533.27182, 536.31911, 546.28695, 573.29223, 589.80297, 646.34500, 646.35589, 646.82644, 696.34976, 793.40252, 906.48658, 1017.48223, 1020.52951, 1091.56663, 1145.57719, 1178.59865, 1292.64560 },
                    new [] { 00.00083, 000.07962, 000.00156, 000.28433, 000.00081, 000.07220, 000.10411, 000.02537, 000.02129, 000.04230, 000.01476, 000.02720, 000.07630, 000.04316, 000.04342, 000.00036, 000.22793, 000.06515, 000.04164, 000.00030, 000.04635, 001.00000, 000.14663, 0000.00628, 0000.18799, 0000.10762, 0000.01465, 0000.59527, 0000.00741 }),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 52.7315483093262,
                    new [] { 153.55955, 175.11895, 197.07556, 219.07979, 288.20302, 306.11182, 366.70031, 393.14385, 423.24235, 448.23366, 450.16531, 479.78438, 507.18677, 508.29511, 509.26093, 536.80584, 576.29224, 580.32186, 589.27626, 620.27084, 623.83787, 689.35811, 732.39335, 733.35490, 845.47742, 889.45601, 1017.51459, 1177.54524, 1246.66847, 1290.62930 },
                    new [] { 000.00057, 001.00000, 000.00352, 000.46199, 000.07590, 000.15220, 000.00787, 000.00448, 000.04729, 000.06724, 000.00208, 000.03022, 000.00736, 000.03471, 000.00343, 000.09071, 000.32377, 000.09101, 000.00593, 000.02056, 000.16441, 000.05520, 000.04431, 000.02718, 000.00376, 000.12836, 0000.06781, 0000.09974, 0000.01568, 0000.37118 }),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: 16.7480049133301,
                    new [] { 129.10224, 133.58421, 147.11280, 177.10023, 233.64226, 260.19687, 266.16115, 347.69776, 353.19318, 389.23946, 464.75360, 466.27724, 476.27149, 508.26962, 569.80877, 572.79091, 581.30419, 613.33040, 629.33294, 638.33823, 694.38825, 710.38317, 823.46723, 928.49993, 938.49417, 1015.53195, 1051.57824, 1138.61026, 1144.57455, 1257.65861, 1275.66918 },
                    new [] { 000.59575, 000.00381, 000.18599, 000.00142, 000.00151, 000.25056, 000.41094, 000.00200, 000.06679, 000.03986, 000.04181, 000.03207, 000.19455, 000.05958, 000.02694, 000.20496, 000.09766, 000.05125, 000.25511, 000.97654, 000.12930, 000.60796, 000.23926, 000.06757, 000.22579, 0000.02576, 0000.28669, 0001.00000, 0000.12331, 0000.08070, 0000.13648 }),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 41.0598335266113,
                    new [] { 175.11895, 203.06625, 216.58989, 246.15607, 304.11393, 359.24013, 432.17250, 438.23145, 488.75529, 506.30854, 525.22147, 533.22018, 552.78458, 581.76351, 603.30841, 637.34903, 660.82189, 670.27909, 738.39671, 771.32677, 875.45562, 902.36726, 976.50330, 1049.43567, 1104.56187, 1162.51974, 1205.60955, 1233.55685 },
                    new [] { 000.29765, 000.22236, 000.00326, 000.14747, 000.18136, 000.13962, 000.06572, 000.24656, 000.16712, 000.26212, 000.00229, 000.08270, 000.09340, 000.00003, 000.58427, 000.42265, 000.10961, 000.12133, 001.00000, 000.08142, 000.96251, 000.04987, 000.82588, 0000.05143, 0000.11293, 0000.02278, 0000.05129, 0000.02961 }),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 91.0804061889648,
                    new [] { 88.03930, 144.58134, 175.11895, 180.09989, 201.12337, 223.61591, 249.80095, 262.15098, 288.15540, 293.48112, 322.49179, 341.18061, 349.18301, 351.50247, 359.19251, 370.50962, 399.52030, 420.22012, 428.53097, 446.22454, 466.22566, 485.23282, 514.24349, 533.30419, 547.27222, 551.93818, 575.61722, 604.62790, 620.33621, 633.63857, 660.35628, 677.35768, 747.38831, 790.44174, 877.47377, 878.42879, 936.95201, 964.50580, 965.46082, 1021.52726, 1052.49285, 1108.55929, 1109.51432, 1195.59132, 1196.54634, 1326.63180, 1413.66383 },
                    new [] { 00.00379, 000.00153, 000.15290, 000.00424, 000.37900, 000.00130, 000.00104, 000.06219, 000.12384, 000.00083, 000.00149, 000.00036, 000.16183, 000.00094, 000.03182, 000.00161, 000.00000, 000.27533, 000.00134, 000.02077, 000.00088, 000.00159, 000.00183, 000.22818, 000.02771, 000.00189, 000.00199, 000.00349, 000.26694, 000.00112, 000.03557, 001.00000, 000.02642, 000.33343, 000.26699, 000.02386, 000.00781, 000.09927, 000.01522, 0000.21887, 0000.01003, 0000.12035, 0000.00694, 0000.13979, 0000.00495, 0000.01787, 0000.04224 }),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 102.257415771484,
                    new [] { 175.11895, 216.10158, 245.13182, 273.61505, 288.20302, 367.22309, 374.17442, 419.24350, 423.76512, 431.19588, 481.27859, 509.78933, 546.22282, 547.33846, 574.31062, 630.85265, 634.37049, 659.30689, 733.43891, 758.37530, 846.52297, 961.54991, 973.50229, 1018.57138, 1104.54278, 1147.61397, 1217.62684, 1260.69803 },
                    new [] { 000.18030, 000.00328, 000.52062, 000.00142, 000.06327, 000.00953, 000.13306, 000.11385, 000.06355, 000.03152, 000.02787, 000.21041, 000.10150, 000.09376, 000.48139, 000.37552, 000.58395, 000.03853, 000.45401, 000.02214, 000.42578, 000.18919, 000.00107, 0000.70568, 0000.00973, 0001.00000, 0000.01147, 0000.12610 }),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 99.1799621582031,
                    new [] { 135.74260, 147.11280, 203.11026, 219.11280, 246.62628, 260.19687, 263.83382, 318.18122, 357.24963, 377.84657, 395.24709, 401.19813, 405.21325, 406.85725, 430.53628, 436.71668, 456.31805, 492.56976, 500.74597, 566.26622, 593.29295, 603.38646, 606.96629, 609.78223, 644.66098, 645.30079, 690.41849, 694.83499, 730.35186, 738.35101, 743.39776, 789.48690, 793.92160, 801.38898, 811.88521, 837.43761, 860.52402, 861.41942, 872.42609, 880.95363, 909.94580, 930.48784, 947.55604, 966.48784, 1000.48467, 1004.02204, 1078.59653, 1131.52515, 1206.65511, 1218.55718, 1277.69222, 1289.59430, 1348.72933, 1388.66271 },
                    new [] { 000.00023, 000.14599, 000.00347, 000.50220, 000.00126, 000.08492, 000.00078, 000.06166, 001.00000, 000.00023, 000.00209, 000.00462, 000.00485, 000.00038, 000.00026, 000.01542, 000.11064, 000.00003, 000.03704, 000.02001, 000.00213, 000.07425, 000.00190, 000.01410, 000.00281, 000.01252, 000.30399, 000.00715, 000.02702, 000.00314, 000.02085, 000.16757, 000.01843, 000.06884, 000.00124, 000.01246, 000.10343, 000.00141, 000.09627, 000.08906, 000.00162, 000.08537, 000.14448, 000.00101, 0000.17531, 0000.00679, 0000.05157, 0000.05000, 0000.02340, 0000.02006, 0000.03973, 0000.01752, 0000.02102, 0000.00597 }),
            }},

            {"Prosit_2020_intensity_CID-Prosit_2019_irt", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 45.2506713867188,
                    new [] { 189.08698, 203.10263, 254.60723, 276.61707, 290.13466, 306.15944, 333.63853, 360.64708, 377.16669, 382.16492, 417.66854, 437.19992, 439.67839, 475.18201, 505.19863, 508.20717, 540.70226, 548.71464, 552.22686, 592.23066, 606.22250, 623.23412, 642.75450, 666.26979, 720.28688, 763.32256, 834.32981, 878.34950, 949.35675, 1009.38998, 1080.39724, 1096.42201, 1183.45404, 1211.43772 },
                    new [] { 000.00212, 000.03489, 000.00311, 000.00206, 000.02276, 000.04661, 000.00161, 000.00351, 000.03325, 000.01480, 000.00538, 000.09209, 000.02615, 000.00702, 000.02387, 000.12279, 000.01039, 000.03516, 000.06361, 000.50039, 000.01029, 000.41318, 000.05812, 000.04002, 000.01567, 001.00000, 000.02403, 000.80519, 000.06154, 0000.23502, 0000.03944, 0000.16617, 0000.32593, 0000.04740 }),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 58.0482025146484,
                    new [] { 210.11809, 211.64173, 261.15975, 267.13955, 294.18122, 323.68158, 348.19178, 348.67852, 372.20796, 397.20490, 419.22890, 422.27618, 452.22329, 453.74693, 509.24475, 510.76839, 533.27182, 536.31911, 546.28695, 573.29223, 589.80297, 646.34500, 646.35589, 646.82644, 696.34976, 743.40865, 793.40252, 903.43930, 906.48658, 1017.48223, 1020.52951, 1091.56663, 1145.57719, 1178.59865, 1291.68272, 1292.64560 },
                    new [] { 000.00229, 000.00020, 000.06270, 000.00311, 000.04095, 000.00297, 000.03426, 000.00249, 000.00414, 000.01087, 000.02370, 000.03150, 000.00585, 000.01078, 000.00922, 000.03820, 000.06233, 000.03359, 000.08009, 000.02315, 000.73428, 000.10576, 000.14590, 000.08221, 000.05203, 000.01715, 001.00000, 000.01516, 000.18901, 0000.01868, 0000.19376, 0000.08900, 0000.05543, 0000.39234, 0000.00492, 0000.07522 }),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 52.7315483093262,
                    new [] { 197.07556, 219.07979, 225.58629, 254.09702, 288.20302, 288.64976, 306.11182, 310.63906, 366.70031, 367.18109, 393.14385, 423.24235, 445.23164, 448.23366, 450.16531, 479.78438, 507.18677, 508.29511, 509.26093, 536.80584, 576.29224, 580.32186, 589.27626, 620.27084, 623.83787, 645.81829, 689.35811, 732.39335, 733.35490, 845.47742, 889.45601, 958.56148, 1015.58294, 1017.51459, 1072.60441, 1159.63644, 1177.54524, 1246.66847, 1290.62930 },
                    new [] { 000.00819, 000.10995, 000.01427, 000.01282, 000.12557, 000.01299, 000.10651, 000.01666, 000.05206, 000.02151, 000.05793, 000.12774, 000.03418, 000.27959, 000.05831, 000.10503, 000.10023, 000.13410, 000.05810, 000.28634, 000.93414, 000.33904, 000.09522, 000.20155, 000.53881, 000.10603, 000.27214, 000.18070, 000.12406, 000.09548, 000.60577, 000.05906, 0000.06563, 0000.26763, 0000.06985, 0000.04978, 0000.24632, 0000.06045, 0001.00000 }),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: 16.7480049133301,
                    new [] { 74.06004, 238.63938, 260.19687, 266.16115, 307.16884, 347.69776, 353.19318, 355.69522, 389.23946, 396.22415, 412.23725, 464.75360, 466.27724, 469.75072, 476.27149, 508.26962, 526.29276, 569.80877, 572.79091, 581.30419, 613.33040, 629.33294, 638.33823, 694.38825, 710.38317, 791.44101, 823.46723, 928.49993, 938.49417, 1015.53195, 1051.57824, 1138.61026, 1144.57455, 1257.65861, 1275.66918 },
                    new [] { 00.00168, 000.00028, 000.02626, 000.04153, 000.00120, 000.00019, 000.00465, 000.00172, 000.00416, 000.00087, 000.00077, 000.00481, 000.02055, 000.00114, 000.04463, 000.00796, 000.00139, 000.01518, 000.05074, 000.13381, 000.02825, 000.18251, 001.00000, 000.02973, 000.08616, 000.00848, 000.16313, 000.04089, 000.07221, 0000.00953, 0000.07299, 0000.20727, 0000.05664, 0000.01377, 0000.02872 }),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 41.0598335266113,
                    new [] { 203.06625, 216.58989, 246.15607, 267.11373, 304.11393, 319.17815, 335.64318, 359.24013, 369.70199, 386.16702, 432.17250, 438.23145, 451.68727, 488.75529, 506.30854, 525.22147, 533.22018, 552.78458, 581.76351, 603.30841, 617.28206, 637.34903, 660.82189, 670.27909, 738.39671, 771.32677, 875.45562, 902.36726, 976.50330, 1049.43567, 1104.56187, 1162.51974, 1205.60955, 1233.55685 },
                    new [] { 000.00471, 000.00094, 000.05003, 000.00220, 000.03439, 000.00053, 000.00149, 000.08149, 000.00180, 000.00295, 000.03412, 000.03295, 000.00681, 000.07227, 000.20195, 000.00956, 000.05678, 000.07472, 000.01402, 001.00000, 000.01472, 000.24199, 000.06634, 000.15982, 000.44406, 000.08183, 000.54403, 000.08400, 000.42567, 0000.07728, 0000.05528, 0000.07041, 0000.01371, 0000.10006 }),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 91.0804061889648,
                    new [] { 67.71264, 101.06532, 120.40235, 201.12337, 220.79028, 226.45741, 249.80095, 262.15098, 264.15210, 267.15573, 288.15540, 293.16277, 293.48112, 310.67175, 322.17345, 322.49179, 330.68178, 339.18248, 341.18061, 349.18301, 351.50247, 359.19251, 370.19128, 370.50962, 374.19779, 395.72451, 399.20196, 399.52030, 420.22012, 428.53097, 439.24052, 439.71804, 442.88212, 446.22454, 466.22566, 471.89280, 482.75654, 483.23405, 485.23282, 509.58748, 511.26727, 514.24349, 526.75006, 533.30419, 543.27004, 547.27222, 551.93818, 554.78328, 555.26080, 572.28072, 575.61722, 595.95976, 598.29930, 598.77681, 604.62790, 620.33621, 624.97043, 633.63857, 642.29282, 660.35628, 662.66512, 663.81954, 677.35768, 698.83486, 707.33555, 727.34559, 747.38831, 763.87759, 770.86160, 790.44174, 814.40143, 827.40363, 857.91744, 862.92219, 877.47377, 878.42879, 893.43600, 906.43821, 936.95201, 949.95422, 964.50580, 965.46082, 993.49404, 1021.52726, 1052.49285, 1108.55929, 1109.51432, 1195.59132, 1196.54634, 1283.57837, 1396.66244, 1627.79558, 1714.82760, 1985.98081 },
                    new [] { 00.00181, 000.00229, 000.00489, 000.06423, 000.00217, 000.00389, 000.01486, 000.10866, 000.00926, 000.02136, 000.08244, 000.01508, 000.02308, 000.02403, 000.01381, 000.02604, 000.00397, 000.06560, 000.02446, 000.26951, 000.02298, 000.09682, 000.02972, 000.02103, 000.01041, 000.05510, 000.03494, 000.02775, 000.48035, 000.03282, 000.06315, 000.02630, 000.03534, 000.10819, 000.03318, 000.04184, 000.08714, 000.04023, 000.03843, 000.04769, 000.12165, 000.04846, 000.05579, 000.43254, 000.05341, 000.20656, 000.05466, 000.19776, 000.07922, 000.06729, 000.06549, 000.09071, 000.39512, 000.14773, 000.08698, 000.53863, 000.22470, 000.08934, 000.24780, 000.35066, 000.13442, 000.37126, 001.00000, 000.28077, 000.33589, 000.19777, 000.19263, 000.45413, 000.20475, 000.30759, 000.27500, 000.30065, 000.49717, 000.29975, 000.28941, 000.21887, 000.36974, 000.17711, 000.70716, 000.10309, 000.09362, 000.15340, 000.05427, 0000.06355, 0000.09321, 0000.05560, 0000.06893, 0000.02451, 0000.04659, 0000.03053, 0000.01074, 0000.00005, 0000.00285, 0000.01805 }),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 102.257415771484,
                    new [] { 187.59085, 210.12539, 216.10158, 245.13182, 273.61505, 274.17287, 288.20302, 317.68888, 330.15708, 367.22309, 374.17442, 379.69129, 419.24350, 423.20730, 423.76512, 431.19588, 481.27859, 487.25479, 509.78933, 546.22282, 547.33846, 552.77503, 574.31062, 609.31706, 630.85265, 634.37049, 659.30689, 733.43891, 758.37530, 845.40733, 846.52297, 961.54991, 973.50229, 1018.57138, 1104.54278, 1147.61397, 1217.62684, 1260.69803 },
                    new [] { 000.00034, 000.00135, 000.00743, 000.14874, 000.00716, 000.00416, 000.07518, 000.00982, 000.00710, 000.01518, 000.09953, 000.00916, 000.20771, 000.00829, 000.04895, 000.04061, 000.05061, 000.01424, 000.42779, 000.16864, 000.19798, 000.02695, 001.00000, 000.02539, 000.52227, 000.94162, 000.21516, 000.64672, 000.10982, 000.04277, 000.53718, 000.19249, 000.07589, 0000.64396, 0000.06196, 0000.61228, 0000.11558, 0000.02539 }),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 99.1799621582031,
                    new [] { 36.52583, 119.75473, 219.11280, 228.66266, 230.81101, 244.12214, 260.19687, 263.83382, 267.80118, 287.51286, 291.48021, 297.15011, 302.19687, 316.52353, 318.18122, 334.16641, 345.71288, 357.24963, 360.20369, 365.67957, 377.84657, 395.24709, 401.19813, 402.88989, 405.21325, 406.85725, 426.56892, 430.53628, 430.76565, 436.71668, 450.24796, 456.31805, 463.55909, 474.28166, 492.24527, 492.56976, 495.93427, 500.74597, 529.61683, 539.80190, 541.59257, 558.62750, 566.26622, 574.61537, 587.63818, 593.29295, 603.38646, 603.83119, 606.96629, 609.78223, 620.66098, 639.34975, 644.66098, 645.30079, 669.68379, 674.86830, 690.41849, 694.83499, 730.35186, 738.35101, 743.39776, 789.48690, 793.92160, 801.38898, 811.88521, 837.43761, 860.52402, 861.41942, 872.42609, 880.95363, 909.94580, 930.48784, 947.55604, 966.48784, 1000.48467, 1004.02204, 1078.59653, 1131.52515, 1218.55718, 1289.59430, 2007.03681 },
                    new [] { 00.00330, 000.00178, 000.01642, 000.00115, 000.01047, 000.00167, 000.05050, 000.01093, 000.00200, 000.01067, 000.00821, 000.00597, 000.00395, 000.01035, 000.03391, 000.01002, 000.01461, 000.66293, 000.01527, 000.01621, 000.01367, 000.01641, 000.02265, 000.02027, 000.02952, 000.01809, 000.02218, 000.02110, 000.02711, 000.03573, 000.01974, 000.32777, 000.02015, 000.04370, 000.03544, 000.03029, 000.02238, 000.08875, 000.02845, 000.06861, 000.02525, 000.03380, 000.21854, 000.03591, 000.05010, 000.06568, 000.51979, 000.07179, 000.04654, 000.29945, 000.07615, 000.09076, 000.05798, 000.69314, 000.06436, 000.05660, 000.55742, 000.13415, 000.07415, 000.49139, 000.04141, 000.49639, 000.05417, 000.08378, 000.33977, 000.06269, 000.30819, 001.00000, 000.11548, 000.22126, 000.05630, 000.15853, 000.22485, 000.14431, 0000.11058, 0000.02707, 0000.07286, 0000.07343, 0000.03643, 0000.02755, 0000.00092 }),
            }},

            {"Prosit_2020_intensity_HCD-Prosit_2019_irt", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 45.2506713867188,
                    new [] { 175.11895, 189.08698, 203.10263, 290.13466, 306.15944, 377.16669, 382.16492, 437.19992, 439.67839, 505.19863, 508.20717, 552.22686, 623.23412, 666.26979, 763.32256, 878.34950, 1009.38998, 1096.42201, 1183.45404 },
                    new [] { 000.08397, 000.00054, 000.18443, 000.00903, 000.02378, 000.01271, 000.03842, 000.10454, 000.00975, 000.00086, 000.00069, 000.02792, 000.00655, 000.03547, 001.00000, 000.32818, 0000.16825, 0000.18982, 0000.36345 }),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 58.0482025146484,
                    new [] { 147.11280, 210.11809, 261.15975, 267.13955, 294.18122, 348.19178, 397.20490, 419.22890, 422.27618, 453.74693, 510.76839, 533.27182, 536.31911, 546.28695, 589.80297, 646.34500, 646.35589, 646.82644, 696.34976, 793.40252, 906.48658, 1020.52951, 1091.56663, 1145.57719, 1178.59865, 1292.64560 },
                    new [] { 000.10259, 000.00091, 000.29740, 000.00040, 000.08280, 000.11955, 000.02571, 000.02399, 000.04285, 000.01532, 000.03134, 000.08555, 000.04641, 000.05781, 000.31544, 000.08652, 000.05088, 000.00220, 000.04335, 001.00000, 000.18887, 0000.22516, 0000.13251, 0000.00630, 0000.67877, 0000.00990 }),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 52.7315483093262,
                    new [] { 175.11895, 219.07979, 288.20302, 306.11182, 393.14385, 423.24235, 448.23366, 479.78438, 507.18677, 508.29511, 509.26093, 536.80584, 576.29224, 580.32186, 589.27626, 620.27084, 623.83787, 689.35811, 732.39335, 733.35490, 845.47742, 889.45601, 1017.51459, 1177.54524, 1246.66847, 1290.62930 },
                    new [] { 001.00000, 000.52055, 000.08621, 000.16977, 000.00685, 000.03578, 000.10303, 000.02967, 000.02933, 000.05646, 000.00094, 000.06475, 000.33625, 000.08914, 000.01722, 000.05256, 000.19711, 000.06144, 000.00903, 000.01908, 000.01335, 000.15022, 0000.06540, 0000.10684, 0000.02609, 0000.34345 }),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: 16.7480049133301,
                    new [] { 129.10224, 133.58421, 147.11280, 260.19687, 266.16115, 353.19318, 389.23946, 396.22415, 464.75360, 466.27724, 476.27149, 508.26962, 572.79091, 581.30419, 613.33040, 629.33294, 638.33823, 694.38825, 710.38317, 791.44101, 823.46723, 928.49993, 938.49417, 1015.53195, 1051.57824, 1138.61026, 1144.57455, 1257.65861, 1275.66918 },
                    new [] { 000.48674, 000.04961, 000.16003, 000.25711, 000.47667, 000.11474, 000.03688, 000.00035, 000.01745, 000.05727, 000.16443, 000.05482, 000.21548, 000.17944, 000.08304, 000.18441, 000.94845, 000.18019, 000.75466, 000.00868, 000.32266, 000.04624, 000.26754, 0000.00873, 0000.29138, 0001.00000, 0000.08736, 0000.03285, 0000.10650 }),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 41.0598335266113,
                    new [] { 175.11895, 203.06625, 216.58989, 246.15607, 304.11393, 359.24013, 432.17250, 438.23145, 488.75529, 506.30854, 533.22018, 552.78458, 603.30841, 637.34903, 660.82189, 670.27909, 738.39671, 771.32677, 875.45562, 902.36726, 976.50330, 1049.43567, 1104.56187, 1162.51974, 1205.60955, 1233.55685 },
                    new [] { 000.37143, 000.22367, 000.00056, 000.15754, 000.17493, 000.12634, 000.05733, 000.21164, 000.18698, 000.26098, 000.08631, 000.10835, 000.62432, 000.39121, 000.10516, 000.10526, 001.00000, 000.10003, 000.94764, 000.04680, 000.86278, 0000.05204, 0000.15135, 0000.02845, 0000.06504, 0000.03543 }),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 91.0804061889648,
                    new [] { 175.11895, 201.12337, 262.15098, 288.15540, 349.18301, 359.19251, 374.19779, 399.52030, 420.22012, 439.71804, 446.22454, 533.30419, 547.27222, 620.33621, 660.35628, 663.81954, 677.35768, 707.33555, 747.38831, 790.44174, 877.47377, 878.42879, 964.50580, 965.46082, 1021.52726, 1108.55929, 1195.59132, 1196.54634, 1283.57837, 1326.63180, 1413.66383, 1898.90116 },
                    new [] { 000.22028, 000.46305, 000.07795, 000.13315, 000.19393, 000.03482, 000.00049, 000.00204, 000.33221, 000.00102, 000.01287, 000.24915, 000.01664, 000.28887, 000.02463, 000.00399, 001.00000, 000.01561, 000.01075, 000.27881, 000.19530, 000.01165, 000.10994, 000.00065, 0000.20206, 0000.11521, 0000.17196, 0000.00139, 0000.00123, 0000.02139, 0000.02074, 0000.00008 }),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 102.257415771484,
                    new [] { 175.11895, 216.10158, 245.13182, 288.20302, 367.22309, 374.17442, 419.24350, 423.76512, 431.19588, 481.27859, 509.78933, 546.22282, 547.33846, 574.31062, 630.85265, 634.37049, 659.30689, 733.43891, 758.37530, 846.52297, 961.54991, 1018.57138, 1104.54278, 1147.61397, 1217.62684, 1260.69803 },
                    new [] { 000.17201, 000.00167, 000.51172, 000.05141, 000.00299, 000.11535, 000.10540, 000.04680, 000.01694, 000.01626, 000.21970, 000.10807, 000.08845, 000.50892, 000.42734, 000.60740, 000.04477, 000.48821, 000.01996, 000.34684, 000.17567, 0000.75142, 0000.00520, 0001.00000, 0000.00413, 0000.10565 }),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 99.1799621582031,
                    new [] { 147.11280, 203.11026, 219.11280, 260.19687, 287.51286, 318.18122, 345.71288, 357.24963, 395.24709, 401.19813, 405.21325, 436.71668, 456.31805, 500.74597, 566.26622, 593.29295, 603.38646, 609.78223, 645.30079, 674.86830, 690.41849, 694.83499, 730.35186, 738.35101, 743.39776, 789.48690, 793.92160, 801.38898, 837.43761, 860.52402, 872.42609, 880.95363, 930.48784, 947.55604, 1000.48467, 1078.59653, 1131.52515, 1206.65511, 1218.55718, 1277.69222, 1289.59430, 1348.72933 },
                    new [] { 000.18834, 000.00177, 000.64104, 000.08977, 000.00018, 000.09108, 000.00265, 001.00000, 000.00222, 000.00329, 000.00491, 000.01495, 000.11755, 000.03251, 000.01153, 000.00090, 000.08542, 000.00863, 000.00645, 000.03288, 000.36409, 000.00159, 000.02972, 000.00078, 000.02002, 000.20628, 000.00903, 000.06181, 000.01979, 000.12527, 000.10857, 000.12146, 000.11071, 000.17608, 0000.15900, 0000.07313, 0000.03381, 0000.02990, 0000.01320, 0000.05999, 0000.01704, 0000.01534 }),
            }},

            {"Prosit_2023_intensity_timsTOF-Prosit_2019_irt", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 45.2506713867188,
                    new [] { 145.57097, 189.08698, 203.10263, 254.60723, 290.13466, 306.15944, 312.12070, 360.64708, 377.16669, 382.16492, 417.66854, 437.19992, 439.67839, 475.18201, 505.19863, 508.20717, 540.70226, 548.71464, 552.22686, 592.23066, 606.22250, 623.23412, 642.75450, 666.26979, 720.28688, 763.32256, 834.32981, 878.34950, 949.35675, 1009.38998, 1080.39724, 1096.42201, 1183.45404 },
                    new [] { 000.00094, 000.00097, 000.01314, 000.00050, 000.01136, 000.02410, 000.00065, 000.00191, 000.03085, 000.03712, 000.00330, 000.09936, 000.01733, 000.00427, 000.01215, 000.01838, 000.00418, 000.00987, 000.05604, 000.01958, 000.00598, 000.04750, 000.01313, 000.08517, 000.00638, 001.00000, 000.00336, 000.35195, 000.00365, 0000.12348, 0000.00088, 0000.11165, 0000.14159 }),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 58.0482025146484,
                    new [] { 74.54148, 174.59953, 210.11809, 261.15975, 267.13955, 268.66319, 294.18122, 323.68158, 348.19178, 348.67852, 372.20796, 397.20490, 419.22890, 422.27618, 452.22329, 453.74693, 509.24475, 510.76839, 533.27182, 536.31911, 546.28695, 573.29223, 589.80297, 646.34500, 646.35589, 646.82644, 696.34976, 743.40865, 793.40252, 903.43930, 906.48658, 1017.48223, 1020.52951, 1091.56663, 1145.57719, 1178.59865, 1292.64560 },
                    new [] { 00.00013, 000.00035, 000.00160, 000.10075, 000.00260, 000.00012, 000.05285, 000.00250, 000.11199, 000.00236, 000.00438, 000.02393, 000.04695, 000.06549, 000.00588, 000.01855, 000.00733, 000.03685, 000.14731, 000.08231, 000.06425, 000.01152, 000.29204, 000.10954, 000.13684, 000.02246, 000.09139, 000.01121, 001.00000, 000.00881, 000.18562, 0000.00694, 0000.16735, 0000.08918, 0000.01097, 0000.28515, 0000.00487 }),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 52.7315483093262,
                    new [] { 44.52329, 197.07556, 219.07979, 225.58629, 254.09702, 288.20302, 288.64976, 306.11182, 310.63906, 366.70031, 367.18109, 393.14385, 423.24235, 445.23164, 448.23366, 450.16531, 479.78438, 507.18677, 508.29511, 509.26093, 536.80584, 576.29224, 580.32186, 589.27626, 620.27084, 623.83787, 645.81829, 689.35811, 732.39335, 733.35490, 845.47742, 889.45601, 958.56148, 1015.58294, 1017.51459, 1072.60441, 1159.63644, 1177.54524, 1246.66847, 1290.62930 },
                    new [] { 00.00026, 000.00625, 000.14369, 000.00980, 000.00867, 000.14588, 000.00005, 000.23725, 000.01280, 000.03699, 000.01601, 000.08576, 000.10991, 000.02759, 000.34424, 000.07754, 000.13610, 000.23560, 000.16411, 000.04996, 000.17121, 001.00000, 000.20396, 000.11601, 000.27406, 000.42293, 000.06343, 000.20928, 000.16748, 000.18422, 000.10247, 000.41302, 000.00213, 0000.02478, 0000.12982, 0000.04422, 0000.02852, 0000.14807, 0000.06684, 0000.21532 }),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: 16.7480049133301,
                    new [] { 195.12337, 238.63938, 260.19687, 266.16115, 307.16884, 347.69776, 353.19318, 355.69522, 389.23946, 396.22415, 412.23725, 464.75360, 466.27724, 469.75072, 476.27149, 508.26962, 526.29276, 569.80877, 572.79091, 581.30419, 613.33040, 629.33294, 638.33823, 694.38825, 710.38317, 791.44101, 823.46723, 928.49993, 938.49417, 1015.53195, 1051.57824, 1138.61026, 1144.57455, 1257.65861, 1275.66918 },
                    new [] { 000.00185, 000.00084, 000.07457, 000.18464, 000.00677, 000.00338, 000.11631, 000.00405, 000.06743, 000.01153, 000.00483, 000.03560, 000.09468, 000.00682, 000.23852, 000.09204, 000.00557, 000.04554, 000.30003, 000.27477, 000.18040, 000.29292, 001.00000, 000.29191, 000.86789, 000.05047, 000.32441, 000.08444, 000.21573, 0000.02922, 0000.15670, 0000.37187, 0000.04207, 0000.01111, 0000.02757 }),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 41.0598335266113,
                    new [] { 203.06625, 216.58989, 246.15607, 267.11373, 304.11393, 335.64318, 359.24013, 369.70199, 386.16702, 432.17250, 438.23145, 451.68727, 488.75529, 506.30854, 525.22147, 533.22018, 552.78458, 581.76351, 603.30841, 617.28206, 637.34903, 660.82189, 670.27909, 738.39671, 771.32677, 875.45562, 902.36726, 976.50330, 1049.43567, 1104.56187, 1162.51974, 1205.60955, 1233.55685 },
                    new [] { 000.01275, 000.00037, 000.04268, 000.00037, 000.10781, 000.00382, 000.12028, 000.00192, 000.00787, 000.10880, 000.18767, 000.00832, 000.15879, 000.28702, 000.01361, 000.17486, 000.13940, 000.01604, 000.51068, 000.01385, 000.49252, 000.13345, 000.19162, 001.00000, 000.14866, 000.78510, 000.07797, 000.51185, 0000.05647, 0000.08287, 0000.02362, 0000.01759, 0000.01671 }),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 91.0804061889648,
                    new [] { 44.52329, 88.05518, 140.74489, 175.11895, 183.09559, 201.12337, 207.45026, 223.61591, 249.80095, 262.15098, 264.15210, 274.13975, 288.15540, 293.16277, 293.48112, 310.67175, 322.17345, 322.49179, 330.68178, 341.18061, 349.18301, 351.50247, 359.19251, 370.19128, 370.50962, 374.19779, 395.72451, 399.20196, 399.52030, 420.22012, 428.53097, 439.24052, 439.71804, 442.88212, 446.22454, 466.22566, 471.89280, 482.75654, 483.23405, 485.23282, 509.58748, 511.26727, 514.24349, 526.75006, 533.30419, 543.27004, 547.27222, 551.93818, 554.78328, 555.26080, 572.28072, 575.61722, 595.95976, 598.29930, 598.77681, 604.62790, 620.33621, 624.97043, 633.63857, 642.29282, 660.35628, 662.66512, 663.81954, 677.35768, 698.83486, 707.33555, 727.34559, 747.38831, 763.87759, 770.86160, 790.44174, 814.40143, 827.40363, 857.91744, 862.92219, 877.47377, 878.42879, 893.43600, 906.43821, 936.95201, 949.95422, 964.50580, 965.46082, 993.49404, 1021.52726, 1052.49285, 1108.55929, 1109.51432, 1195.59132, 1196.54634, 1283.57837, 1326.63180 },
                    new [] { 00.00058, 00.00070, 000.00026, 000.00802, 000.00001, 000.03582, 000.00206, 000.00055, 000.00324, 000.02253, 000.00430, 000.00128, 000.05157, 000.00389, 000.00639, 000.00274, 000.00633, 000.00805, 000.00403, 000.00450, 000.12731, 000.00939, 000.04918, 000.00635, 000.00929, 000.00928, 000.00480, 000.00661, 000.01112, 000.27850, 000.01046, 000.00426, 000.01270, 000.00655, 000.04501, 000.00961, 000.00579, 000.00463, 000.01380, 000.00920, 000.00771, 000.00743, 000.00902, 000.01088, 000.28114, 000.00885, 000.05318, 000.00949, 000.01603, 000.01104, 000.00971, 000.01031, 000.01148, 000.01912, 000.01138, 000.01131, 000.30508, 000.01381, 000.01012, 000.01693, 000.07666, 000.01360, 000.03052, 001.00000, 000.01294, 000.04237, 000.01155, 000.05817, 000.02395, 000.01004, 000.26508, 000.01411, 000.00777, 000.01459, 000.00683, 000.16833, 000.03425, 000.00387, 000.00545, 000.02187, 000.00454, 000.07074, 000.01524, 000.00025, 0000.11886, 0000.00442, 0000.05922, 0000.00441, 0000.04073, 0000.00328, 0000.00191, 0000.00403 }),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 102.257415771484,
                    new [] { 210.12539, 216.10158, 245.13182, 273.61505, 274.17287, 288.20302, 317.68888, 330.15708, 367.22309, 374.17442, 379.69129, 419.24350, 423.20730, 423.76512, 431.19588, 481.27859, 487.25479, 509.78933, 546.22282, 547.33846, 552.77503, 574.31062, 609.31706, 630.85265, 634.37049, 659.30689, 733.43891, 758.37530, 845.40733, 846.52297, 961.54991, 973.50229, 1018.57138, 1104.54278, 1147.61397, 1217.62684, 1260.69803 },
                    new [] { 000.00366, 000.00372, 000.14679, 000.00181, 000.00243, 000.05274, 000.00358, 000.00272, 000.01685, 000.14433, 000.00442, 000.16558, 000.00588, 000.05725, 000.05862, 000.04177, 000.00921, 000.24793, 000.23920, 000.18987, 000.01486, 000.60245, 000.01618, 000.52331, 001.00000, 000.13295, 000.76385, 000.06453, 000.01933, 000.44137, 000.21541, 000.01476, 0000.66838, 0000.01536, 0000.59789, 0000.00024, 0000.05784 }),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 99.1799621582031,
                    new [] { 36.52583, 73.70912, 74.06004, 87.40381, 147.11280, 152.77753, 164.75328, 198.43584, 201.80034, 203.11026, 219.11280, 244.12214, 246.62628, 260.19687, 263.83382, 267.80118, 287.51286, 291.48021, 297.15011, 302.19687, 316.52353, 318.18122, 334.16641, 345.71288, 357.24963, 360.20369, 365.67957, 377.84657, 395.24709, 401.19813, 402.88989, 405.21325, 406.85725, 426.56892, 430.53628, 430.76565, 436.71668, 450.24796, 456.31805, 463.55909, 474.28166, 492.24527, 492.56976, 495.93427, 500.74597, 529.61683, 539.80190, 541.59257, 558.62750, 566.26622, 574.61537, 587.63818, 593.29295, 603.38646, 603.83119, 606.96629, 609.78223, 620.66098, 639.34975, 644.66098, 645.30079, 669.68379, 674.86830, 690.41849, 694.83499, 730.35186, 738.35101, 743.39776, 789.48690, 793.92160, 801.38898, 811.88521, 837.43761, 860.52402, 861.41942, 872.42609, 880.95363, 909.94580, 930.48784, 947.55604, 966.48784, 1000.48467, 1004.02204, 1078.59653, 1131.52515, 1206.65511, 1218.55718, 1277.69222, 1289.59430 },
                    new [] { 00.00292, 00.00231, 00.00524, 00.00036, 000.00717, 000.00190, 000.00139, 000.00001, 000.00460, 000.00398, 000.10654, 000.00377, 000.00296, 000.07738, 000.00440, 000.00514, 000.01155, 000.00808, 000.00171, 000.00239, 000.01157, 000.08541, 000.00907, 000.01006, 001.00000, 000.01359, 000.00515, 000.01171, 000.01622, 000.01801, 000.01428, 000.03341, 000.01222, 000.01384, 000.01229, 000.01037, 000.05092, 000.01363, 000.18892, 000.01315, 000.00835, 000.01766, 000.01470, 000.01422, 000.10633, 000.01511, 000.00961, 000.01429, 000.01550, 000.05744, 000.01345, 000.01505, 000.03369, 000.18177, 000.00705, 000.01543, 000.06010, 000.01678, 000.00853, 000.01531, 000.06150, 000.01441, 000.09144, 000.73825, 000.03592, 000.09714, 000.03050, 000.05752, 000.40159, 000.05492, 000.20127, 000.02088, 000.11729, 000.25285, 000.02200, 000.24992, 000.33363, 000.01725, 000.25267, 000.28601, 000.01519, 0000.24714, 0000.01362, 0000.07823, 0000.05467, 0000.02641, 0000.02529, 0000.02493, 0000.02027 }),
            }},

            {"ms2pip_2021_HCD-Prosit_2019_irt", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 45.2506713867188,
                    new [] { 102.05495, 175.11895, 203.10263, 290.13466, 306.15944, 377.16669, 437.19992, 508.20717, 552.22686, 623.23412, 666.26979, 763.32256, 834.32981, 878.34950, 949.35675, 1009.38998, 1080.39724, 1096.42201, 1183.45404, 1284.50172 },
                    new [] { 000.01328, 000.10958, 000.23322, 000.00422, 000.00991, 000.00702, 000.08584, 000.00029, 000.01008, 000.00395, 000.01720, 001.00000, 000.00045, 000.23939, 000.00071, 0000.11108, 0000.00054, 0000.09008, 0000.17429, 0000.00031 }),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 58.0482025146484,
                    new [] { 147.11280, 148.07569, 261.15975, 294.18122, 348.19178, 419.22890, 422.27618, 533.27182, 536.31911, 646.35589, 696.34976, 743.40865, 793.40252, 903.43930, 906.48658, 1017.48223, 1020.52951, 1091.56663, 1145.57719, 1178.59865, 1291.68272, 1292.64560 },
                    new [] { 000.57087, 000.00319, 001.00000, 000.34091, 000.23375, 000.01662, 000.06676, 000.10405, 000.06944, 000.05998, 000.00998, 000.00546, 000.00935, 000.00796, 000.02637, 0000.00076, 0000.02507, 0000.00290, 0000.02022, 0000.06127, 0000.00617, 0000.00565 }),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 52.7315483093262,
                    new [] { 175.11895, 219.07979, 288.20302, 306.11182, 448.23366, 507.18677, 576.29224, 620.27084, 732.39335, 733.35490, 889.45601, 1015.58294, 1017.51459, 1072.60441, 1177.54524, 1246.66847, 1290.62930 },
                    new [] { 001.00000, 000.29373, 000.04316, 000.10050, 000.02747, 000.03467, 000.05688, 000.03601, 000.00637, 000.01396, 000.10682, 0000.03925, 0000.03417, 0000.00612, 0000.01623, 0000.01391, 0000.03611 }),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: 16.7480049133301,
                    new [] { 129.10224, 147.11280, 260.19687, 266.16115, 353.19318, 389.23946, 466.27724, 476.27149, 581.30419, 613.33040, 694.38825, 710.38317, 791.44101, 823.46723, 928.49993, 938.49417, 1015.53195, 1051.57824, 1138.61026, 1144.57455, 1257.65861, 1275.66918 },
                    new [] { 001.00000, 000.45163, 000.46504, 000.45429, 000.05619, 000.03194, 000.01990, 000.19964, 000.18750, 000.05878, 000.22211, 000.64193, 000.00667, 000.15905, 000.04535, 000.09147, 0000.02484, 0000.08096, 0000.50620, 0000.07686, 0000.06880, 0000.07271 }),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 41.0598335266113,
                    new [] { 175.11895, 203.06625, 246.15607, 304.11393, 359.24013, 432.17250, 506.30854, 533.22018, 637.34903, 670.27909, 738.39671, 771.32677, 875.45562, 902.36726, 976.50330, 1049.43567, 1104.56187, 1162.51974, 1205.60955, 1233.55685, 1320.63650 },
                    new [] { 000.61605, 000.18808, 000.13508, 000.09789, 000.06265, 000.03663, 000.12548, 000.04713, 000.21129, 000.06637, 001.00000, 000.06912, 000.63755, 000.00727, 000.70333, 0000.01132, 0000.07698, 0000.00909, 0000.00265, 0000.00218, 0000.00048 }),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 91.0804061889648,
                    new [] { 88.03930, 201.12337, 288.15540, 349.18301, 359.19251, 420.22012, 446.22454, 533.30419, 547.27222, 620.33621, 660.35628, 677.35768, 747.38831, 790.44174, 877.47377, 878.42879, 964.50580, 965.46082, 1021.52726, 1052.49285, 1108.55929, 1109.51432, 1195.59132, 1196.54634, 1283.57837, 1326.63180, 1413.66383, 1453.68390, 1526.74790, 1627.79558, 1653.79999, 1724.83711 },
                    new [] { 00.00170, 000.30234, 000.05262, 000.08734, 000.01594, 000.01876, 000.00853, 000.08543, 000.01126, 000.20318, 000.01763, 000.10221, 000.01612, 000.17280, 001.00000, 000.00408, 000.11997, 000.00460, 0000.13630, 0000.00179, 0000.04548, 0000.00220, 0000.06729, 0000.00144, 0000.00342, 0000.04645, 0000.05395, 0000.00190, 0000.00584, 0000.01389, 0000.00000, 0000.00025 }),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 102.257415771484,
                    new [] { 132.04776, 175.11895, 245.13182, 288.20302, 374.17442, 419.24350, 431.19588, 546.22282, 547.33846, 634.37049, 659.30689, 733.43891, 758.37530, 845.40733, 846.52297, 961.54991, 973.50229, 1018.57138, 1104.54278, 1147.61397, 1217.62684, 1260.69803 },
                    new [] { 000.00424, 000.51433, 000.76799, 000.06307, 000.12174, 000.12888, 000.01606, 000.13202, 000.12640, 001.00000, 000.02183, 000.51885, 000.00745, 000.00176, 000.34286, 000.09358, 000.00242, 0000.87148, 0000.00668, 0000.67319, 0000.00121, 0000.01366 }),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 99.1799621582031,
                    new [] { 147.11280, 219.11280, 260.19687, 318.18122, 357.24963, 405.21325, 456.31805, 492.24527, 603.38646, 690.41849, 730.35186, 789.48690, 801.38898, 860.52402, 872.42609, 947.55604, 1000.48467, 1078.59653, 1131.52515, 1206.65511, 1218.55718, 1277.69222, 1289.59430, 1348.72933, 1485.78825, 1586.83592, 1622.76315, 1721.83157, 1760.89998, 1931.96840 },
                    new [] { 000.34485, 000.76494, 000.10839, 000.11119, 001.00000, 000.02989, 000.05109, 000.00058, 000.07300, 000.23618, 000.04096, 000.17879, 000.13514, 000.10102, 000.15715, 000.22940, 0000.33882, 0000.09870, 0000.02615, 0000.01570, 0000.00509, 0000.01626, 0000.01716, 0000.02364, 0000.00016, 0000.00114, 0000.00114, 0000.00340, 0000.00060, 0000.00031 }),
            }},

            {"Prosit_2019_intensity-Deeplc_hela_hf", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 4.77053070068359),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 6.11395931243896),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 5.75475454330444),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: 2.90845441818237),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 4.57909536361694),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 7.35620164871216),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 7.18436574935913),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 7.56344747543335),
            }},

            {"Prosit_2019_intensity-AlphaPept_rt_generic", new[]
            {
                new PredictionTest("TTSSMDPNDMMR", precursorCharge: 2, nce: 31.167, precursorMz: 693.27833652, retentionTime: 12.35107421875),
                new PredictionTest("FISANLPC[+57.02146]NKFK", precursorCharge: 2, nce: 31.167, precursorMz: 719.87920214, retentionTime: 26.6221313476563),
                new PredictionTest("SMSSGGILRQC[+57.02146]LR", precursorCharge: 2, nce: 31.167, precursorMz: 732.874125155, retentionTime: 14.235897064209),
                new PredictionTest("KHSLDLPHSELK", precursorCharge: 2, nce: 31.167, precursorMz: 702.38570777, retentionTime: -22.4577884674072),
                new PredictionTest("SDTQTHTMFLAR", precursorCharge: 2, nce: 31.167, precursorMz: 704.337900295, retentionTime: 16.7708854675293),
                new PredictionTest("SLSASTLSMSSGSSLGSLASSR", precursorCharge: 3, nce: 33, precursorMz: 691.675796941667, retentionTime: 60.4877548217773),
                new PredictionTest("MLEGDLVSKMLR", precursorCharge: 2, nce: 31.167, precursorMz: 696.372897225, retentionTime: 57.0827407836914),
                new PredictionTest("AFVSSTHAAQMSAVSFVPLK", precursorCharge: 3, nce: 33, precursorMz: 693.362824963333, retentionTime: 67.570686340332),
            }},
        };

        private void TestAllPredictionModels()
        {
            TestFilesDir = new TestFilesDir(TestContext, TEST_ZIP_PATH);
            string koinaCsvTestFilepath = TestFilesDir.GetTestPath("pan_human_library_690to705-z3_nce33.csv");

            Settings.Default.KoinaIntensityModel = KoinaIntensityModel.Models.First();

            int modelsFailed = 0;
            var emc = new SequenceMassCalc(MassType.Monoisotopic);

            void comparePredictionResultsToFile(string intensityModel, string rtModel, bool comparePeaks)
            {
                string modelsSuffix = $"{PathEx.ReplaceInvalidFilenameCharacters(intensityModel)}-{PathEx.ReplaceInvalidFilenameCharacters(rtModel)}";
                string koinaBlibOutputFilepath = TestFilesDir.GetTestPath($"pan_human_library_690to705-z3_nce33-output-{modelsSuffix}.blib");

                var pm = new CommandProgressMonitor(new StringWriter(), new ProgressStatus());
                IProgressStatus status = new ProgressStatus();
                var koinaOutput = KoinaHelpers.PredictBatchesFromKoinaCsv(koinaCsvTestFilepath, pm, ref status, CancellationToken.None);
                KoinaHelpers.ExportKoinaSpectraToBlib(koinaOutput, koinaBlibOutputFilepath, pm, ref status);

                AssertEx.IsTrue(File.Exists(koinaBlibOutputFilepath));
                var blibLibrary = BiblioSpecLiteLibrary.Load(new BiblioSpecLiteSpec("test", koinaBlibOutputFilepath), new DefaultFileLoadMonitor(new SilentProgressMonitor()));

                try
                {
                    if (PredictionTestsByModel.TryGetValue(modelsSuffix, out var predictionTests))
                    {
                        Assert.AreEqual(predictionTests.Count, blibLibrary.SpectrumCount, $"Testing model {modelsSuffix}: spectrum count not equal");
                        foreach (PeptideLibraryKey key in blibLibrary.Keys)
                        {
                            var spectra = blibLibrary.GetSpectra(key, IsotopeLabelType.light, LibraryRedundancy.best);
                            var spectrum = spectra.First();
                            var mass = emc.GetPrecursorMass(key.UnmodifiedSequence) +
                                       key.GetModifications().Sum(mod => MassModification.Parse(mod.Value).Mass);
                            double precursorMz = SequenceMassCalc.GetMZ(mass, key.Charge);

                            string testTag = $"Testing model {modelsSuffix} for peptide {key.ModifiedSequence}+{key.Charge}";

                            var expected = predictionTests.First(t => t.PeptideModSeq == key.ModifiedSequence);
                            Assert.AreEqual(expected.PrecursorMz, precursorMz, 1e-8, $"{testTag}: PrecursorMz not equal");
                            Assert.AreEqual(expected.PrecursorCharge, key.Charge, $"{testTag}: PrecursorCharge not equal");
                            Assert.AreEqual(expected.RetentionTime, spectrum.RetentionTime.Value, 1e-5, $"{testTag}: RetentionTime not equal");

                            if (!comparePeaks)
                                continue;

                            var actualPeaks = spectrum.SpectrumPeaksInfo.Peaks.OrderBy(peak => peak.Mz).Where(p => p.Intensity > 0).ToArray();
                            Assert.AreEqual(expected.Peaks.Length, actualPeaks.Length, $"{testTag}: spectrum peak count not equal");
                            for (int i=0; i < expected.Peaks.Length; ++i)
                            {
                                var expectedPeak = expected.Peaks[i];
                                var actualPeak = actualPeaks[i];
                                Assert.AreEqual(expectedPeak.Mz, actualPeak.Mz, 1e-5, $"{testTag}: peak[{i}].Mz not equal");
                                Assert.AreEqual(expectedPeak.Intensity, actualPeak.Intensity, 1e-5, $"{testTag}: peak[{i}].Intensity not equal");
                            }
                        }
                    }
                    else // generate code for testing results from the unknown model
                    {
                        var predictionTest = new StringBuilder();
                        predictionTest.AppendLine("{\"" + modelsSuffix + "\", new[]");
                        predictionTest.AppendLine("{");

                        foreach (PeptideLibraryKey key in blibLibrary.Keys)
                        {
                            var spectra = blibLibrary.GetSpectra(key, IsotopeLabelType.light, LibraryRedundancy.best);
                            var spectrum = spectra.First();
                            var mass = emc.GetPrecursorMass(key.UnmodifiedSequence) +
                                       key.GetModifications().Sum(mod => MassModification.Parse(mod.Value).Mass);
                            double mz = SequenceMassCalc.GetMZ(mass, key.Charge);
                            predictionTest.AppendFormat("    new PredictionTest({0}, precursorCharge: {1}, nce: {2}, precursorMz: {3}, retentionTime: {4}",
                                key.ModifiedSequence.Quote(), key.Charge, key.Charge == 3 ? 33 : 31.167, mz, spectrum.RetentionTime.GetValueOrDefault(0));
                            //key.Adduct.MzFromNeutralMass(new TypedMass(mass, MassType.Monoisotopic))));
                            if (comparePeaks)
                            {
                                var peaks = spectrum.SpectrumPeaksInfo.Peaks.OrderBy(peak => peak.Mz).Where(p => p.Intensity > 0).ToList();
                                var peakMzStr = new List<string>();
                                var peakIntensityStr = new List<string>();
                                foreach(var peak in peaks)
                                {
                                    int leadingDigits = (int) Math.Floor(Math.Log10(peak.Mz)) + 1;
                                    string format = new string('0', leadingDigits) + ".00000";
                                    peakMzStr.Add(peak.Mz.ToString(format));
                                    peakIntensityStr.Add(peak.Intensity.ToString(format));
                                }

                                predictionTest.AppendFormat(",{0}", Environment.NewLine);
                                predictionTest.AppendFormat("        new [] {{ {0} }},{1}", string.Join(", ", peakMzStr), Environment.NewLine);
                                predictionTest.AppendFormat("        new [] {{ {0} }}),{1}", string.Join(", ", peakIntensityStr), Environment.NewLine);
                            }
                            else
                                predictionTest.AppendFormat("),{0}", Environment.NewLine);
                        }
                        predictionTest.Append("}},");
                        Console.WriteLine(predictionTest.ToString());

                        ++modelsFailed;
                    }
                }
                finally
                {
                    blibLibrary.ReadStream.CloseStream();
                }
            }

            foreach(var rtModel in KoinaRetentionTimeModel.Models)
            {
                Settings.Default.KoinaRetentionTimeModel = rtModel;
                comparePredictionResultsToFile(Settings.Default.KoinaIntensityModel, rtModel, false);
            }

            Settings.Default.KoinaRetentionTimeModel = KoinaRetentionTimeModel.Models.First();
            foreach (var intensityModel in KoinaIntensityModel.Models)
            {
                Settings.Default.KoinaIntensityModel = intensityModel;
                comparePredictionResultsToFile(intensityModel, Settings.Default.KoinaRetentionTimeModel, true);
            }

            Assert.AreEqual(0, modelsFailed);
        }
    }
}
