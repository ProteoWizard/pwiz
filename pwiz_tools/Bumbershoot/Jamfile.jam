#
# $Id$
#
#
# Original author: Matt Chambers <matt.chambers42@gmail.com>
#
# Copyright 2015 Vanderbilt University
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
#

build-project-if-exists freicore ;
build-project-if-exists greazy ;
build-project-if-exists myrimatch ;
build-project-if-exists pepitome ;
build-project-if-exists idpicker ;
build-project-if-exists quameter ;

.common-location = $(PWIZ_BUILD_PATH)/Bumbershoot ;

import tar ;
import common ;
import property-set ;
import sequence ;
import option ;
import property ;
import feature ;
import path ;

constant numeric-version-tag : $(PWIZ_MAJOR) $(PWIZ_MINOR) $(PWIZ_BUILD_TIMESTAMP) ;
constant version-tag : $(numeric-version-tag) $(PWIZ_GIT_REV) ;

# create a VERSION file which can be used by TC to parse the canonical pwiz version
make VERSION : : @make_VERSION : <location>$(.common-location) ;
actions make_VERSION { @($(STDOUT):E=$(version-tag:J=.)) > "$(<)" }
 
rule binary-tarball-requirements ( properties * )
{
    local toolsets = [ feature.get-values <toolset> : $(properties) ] ;
    local variants = [ feature.get-values <variant> : $(properties) ] ;
    local location = [ install-location $(properties) ] ;
    location = $(location:G=) ;

    local non-redistributables = pwiz_bindings_cli.xml H5detect H5make_libsettings ; # .NET documentation

    if $(variants[1]) = "release"
    {
        non-redistributables += *.pdb ; # MSVC debug symbols
    }

    non-redistributables = [ sequence.join $(non-redistributables) : "&&exclude:" ] ;

    local result = "<tar-source>path-anchor:$(location)&&exclude:$(non-redistributables)&&$(location)" ;
    if ! <architecture> in $(properties:G)
    {
        if $(.platform:L) = "x86_64" && <address-model>32 in $(properties) { properties += <architecture>x86 ; }
        else if $(.platform:L) = "x86" && <address-model>64 in $(properties) { properties += <architecture>x86_64 ; } 
        else { properties += <architecture>$(.platform:L) ; }
    }
    local linkage ;
    if <link>shared in $(properties) { linkage = "-shared" ; }
    local name = [ common.format-name <base> <property:target-os> <property:architecture> <toolset> <property:variant> $(linkage) -$(version-tag:J=_)
                                      : bumbershoot-bin : TBZ2 : [ property-set.create $(properties) ] ] ;
    result += <name>$(name)
              <dependency>greazy//install
              <dependency>myrimatch//install
              <dependency>directag//install
              <dependency>tagrecon//install
              <dependency>idpicker//install
              <dependency>pepitome//install
              <dependency>quameter//install
              <location>$(.common-location)
              <dependency>VERSION ;
    return $(result) ;
}

tar.create bumbershoot-bin.tar.bz2
  : # sources are handled by the conditional

  : # requirements
    <conditional>@binary-tarball-requirements
  ;
explicit bumbershoot-bin.tar.bz2 ;


# source tarball

.exclusion-list = .$(common-src-exclusions)
    "exclude:pwiz/utility/bindings/CLI/example"
    "exclude:pwiz_tools/commandline"
    "exclude:pwiz_tools/MSConvertGUI"
    "exclude:pwiz_tools/Bumbershoot/idpicker/Tutorials"
    "exclude:pwiz_tools/examples"
    "exclude:pwiz_tools/sld"
    "exclude:pwiz_tools/BiblioSpec"
    "exclude:pwiz_tools/Skyline"
    "exclude:pwiz_tools/Shared/BiblioSpec"
    "exclude:pwiz_tools/Shared/Crawdad"
    "exclude:pwiz_tools/Shared/ProteomeDb"
    "exclude:pwiz_tools/Shared/ProteowizardWrapper"
    "exclude:pwiz_tools/Shared/Lib/DotNetZip"
    "exclude:pwiz_tools/Shared/Lib/NHibernate"
    "exclude:pwiz_tools/Shared/Lib/npgsql"
    "exclude:pwiz_tools/Shared/Lib/x86"
    "exclude:pwiz_tools/Shared/Lib/x64"
    "exclude:pwiz_tools/Shared/Lib/mysql.*"
    "exclude:pwiz_tools/Shared/Lib/zlib.*"
;

.bumbershoot-sources = $(.exclusion-list) $(.common-sources) ;

.l = 
    $(PWIZ_LIBRARIES_PATH)/boost-build
    $(PWIZ_LIBRARIES_PATH)/boost_aux
    $(PWIZ_LIBRARIES_PATH)/predef
    $(PWIZ_LIBRARIES_PATH)/libsvm-3.0
    $(PWIZ_LIBRARIES_PATH)/SQLite
    $(PWIZ_LIBRARIES_PATH)/Eigen
    $(PWIZ_LIBRARIES_PATH)/CSpline
    [ path.glob $(PWIZ_LIBRARIES_PATH) : *.bat *.sh *.h *.jam *.dll *.lib *.exe *.cpp libgd*.tar.bz2 libpng*.tar.bz2 freetype*.tar.bz2 zlib*.tar.bz2 hdf5*.tar.bz2 expat*.tar.bz2 ]

    # include the bcp'd boost tarball as if it was really located at "libraries/boost_*.tar.bz2"
    "path-anchor:$(BOOST_SUBSET_PATH)"
    $(BOOST_SUBSET_PATH)/libraries
;

.no-t = 
    "exclude:*Test*.data*"
    "exclude:*Test.?pp"
    "exclude:*TestData.?pp"
    "exclude:*.pdf # pwiz posters in /doc"
    "exclude:example_data*"
    "exclude:pwiz_tools/Bumbershoot/idpicker/TestData"
    "exclude:pwiz_tools/Bumbershoot/bumberdash/Tests"
;

.common-requirements = <location>$(.common-location) <dependency>$(PWIZ_ROOT_PATH)//boost_$(BOOST_VERSION:J=_).tar.bz2 <dependency>VERSION ;

tar.create bumbershoot-src.tar.bz2             : $(.bumbershoot-sources) $(.l) : $(.common-requirements) <name>bumbershoot-src-$(version-tag:J=_).tar.bz2 ;
tar.create bumbershoot-src-without-t.tar.bz2   : $(.no-t) $(.bumbershoot-sources) $(.l) : $(.common-requirements) <name>bumbershoot-src-without-t-$(version-tag:J=_).tar.bz2 ;
explicit bumbershoot-src.tar.bz2 bumbershoot-src-without-t.tar.bz2 ;