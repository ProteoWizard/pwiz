# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.39
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pwiz_swigbindings', [dirname(__file__)])
        except ImportError:
            import _pwiz_swigbindings
            return _pwiz_swigbindings
        if fp is not None:
            try:
                _mod = imp.load_module('_pwiz_swigbindings', fp, pathname, description)
            finally:
                fp.close()
                return _mod
    _pwiz_swigbindings = swig_import_helper()
    del swig_import_helper
else:
    import _pwiz_swigbindings
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _pwiz_swigbindings.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _pwiz_swigbindings.SwigPyIterator_value(self)
    def incr(self, n = 1): return _pwiz_swigbindings.SwigPyIterator_incr(self, n)
    def decr(self, n = 1): return _pwiz_swigbindings.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _pwiz_swigbindings.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _pwiz_swigbindings.SwigPyIterator_equal(self, *args)
    def copy(self): return _pwiz_swigbindings.SwigPyIterator_copy(self)
    def next(self): return _pwiz_swigbindings.SwigPyIterator_next(self)
    def __next__(self): return _pwiz_swigbindings.SwigPyIterator___next__(self)
    def previous(self): return _pwiz_swigbindings.SwigPyIterator_previous(self)
    def advance(self, *args): return _pwiz_swigbindings.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _pwiz_swigbindings.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _pwiz_swigbindings.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _pwiz_swigbindings.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _pwiz_swigbindings.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _pwiz_swigbindings.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _pwiz_swigbindings.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _pwiz_swigbindings.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class vectord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, vectord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, vectord, name)
    __repr__ = _swig_repr
    def iterator(self): return _pwiz_swigbindings.vectord_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _pwiz_swigbindings.vectord___nonzero__(self)
    def __bool__(self): return _pwiz_swigbindings.vectord___bool__(self)
    def __len__(self): return _pwiz_swigbindings.vectord___len__(self)
    def pop(self): return _pwiz_swigbindings.vectord_pop(self)
    def __getslice__(self, *args): return _pwiz_swigbindings.vectord___getslice__(self, *args)
    def __setslice__(self, *args): return _pwiz_swigbindings.vectord___setslice__(self, *args)
    def __delslice__(self, *args): return _pwiz_swigbindings.vectord___delslice__(self, *args)
    def __delitem__(self, *args): return _pwiz_swigbindings.vectord___delitem__(self, *args)
    def __getitem__(self, *args): return _pwiz_swigbindings.vectord___getitem__(self, *args)
    def __setitem__(self, *args): return _pwiz_swigbindings.vectord___setitem__(self, *args)
    def append(self, *args): return _pwiz_swigbindings.vectord_append(self, *args)
    def empty(self): return _pwiz_swigbindings.vectord_empty(self)
    def size(self): return _pwiz_swigbindings.vectord_size(self)
    def clear(self): return _pwiz_swigbindings.vectord_clear(self)
    def swap(self, *args): return _pwiz_swigbindings.vectord_swap(self, *args)
    def get_allocator(self): return _pwiz_swigbindings.vectord_get_allocator(self)
    def begin(self): return _pwiz_swigbindings.vectord_begin(self)
    def end(self): return _pwiz_swigbindings.vectord_end(self)
    def rbegin(self): return _pwiz_swigbindings.vectord_rbegin(self)
    def rend(self): return _pwiz_swigbindings.vectord_rend(self)
    def pop_back(self): return _pwiz_swigbindings.vectord_pop_back(self)
    def erase(self, *args): return _pwiz_swigbindings.vectord_erase(self, *args)
    def __init__(self, *args): 
        this = _pwiz_swigbindings.new_vectord(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _pwiz_swigbindings.vectord_push_back(self, *args)
    def front(self): return _pwiz_swigbindings.vectord_front(self)
    def back(self): return _pwiz_swigbindings.vectord_back(self)
    def assign(self, *args): return _pwiz_swigbindings.vectord_assign(self, *args)
    def resize(self, *args): return _pwiz_swigbindings.vectord_resize(self, *args)
    def insert(self, *args): return _pwiz_swigbindings.vectord_insert(self, *args)
    def reserve(self, *args): return _pwiz_swigbindings.vectord_reserve(self, *args)
    def capacity(self): return _pwiz_swigbindings.vectord_capacity(self)
    __swig_destroy__ = _pwiz_swigbindings.delete_vectord
    __del__ = lambda self : None;
vectord_swigregister = _pwiz_swigbindings.vectord_swigregister
vectord_swigregister(vectord)

mzInt = _pwiz_swigbindings.mzInt
mzRuler = _pwiz_swigbindings.mzRuler
mzOnly = _pwiz_swigbindings.mzOnly
intensityOnly = _pwiz_swigbindings.intensityOnly
INSTRUMENT_LENGTH = _pwiz_swigbindings.INSTRUMENT_LENGTH
SCANTYPE_LENGTH = _pwiz_swigbindings.SCANTYPE_LENGTH
CHARGEARRAY_LENGTH = _pwiz_swigbindings.CHARGEARRAY_LENGTH
class ScanHeaderStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ScanHeaderStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ScanHeaderStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["seqNum"] = _pwiz_swigbindings.ScanHeaderStruct_seqNum_set
    __swig_getmethods__["seqNum"] = _pwiz_swigbindings.ScanHeaderStruct_seqNum_get
    if _newclass:seqNum = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_seqNum_get, _pwiz_swigbindings.ScanHeaderStruct_seqNum_set)
    __swig_setmethods__["acquisitionNum"] = _pwiz_swigbindings.ScanHeaderStruct_acquisitionNum_set
    __swig_getmethods__["acquisitionNum"] = _pwiz_swigbindings.ScanHeaderStruct_acquisitionNum_get
    if _newclass:acquisitionNum = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_acquisitionNum_get, _pwiz_swigbindings.ScanHeaderStruct_acquisitionNum_set)
    __swig_setmethods__["msLevel"] = _pwiz_swigbindings.ScanHeaderStruct_msLevel_set
    __swig_getmethods__["msLevel"] = _pwiz_swigbindings.ScanHeaderStruct_msLevel_get
    if _newclass:msLevel = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_msLevel_get, _pwiz_swigbindings.ScanHeaderStruct_msLevel_set)
    __swig_setmethods__["peaksCount"] = _pwiz_swigbindings.ScanHeaderStruct_peaksCount_set
    __swig_getmethods__["peaksCount"] = _pwiz_swigbindings.ScanHeaderStruct_peaksCount_get
    if _newclass:peaksCount = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_peaksCount_get, _pwiz_swigbindings.ScanHeaderStruct_peaksCount_set)
    __swig_setmethods__["totIonCurrent"] = _pwiz_swigbindings.ScanHeaderStruct_totIonCurrent_set
    __swig_getmethods__["totIonCurrent"] = _pwiz_swigbindings.ScanHeaderStruct_totIonCurrent_get
    if _newclass:totIonCurrent = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_totIonCurrent_get, _pwiz_swigbindings.ScanHeaderStruct_totIonCurrent_set)
    __swig_setmethods__["retentionTime"] = _pwiz_swigbindings.ScanHeaderStruct_retentionTime_set
    __swig_getmethods__["retentionTime"] = _pwiz_swigbindings.ScanHeaderStruct_retentionTime_get
    if _newclass:retentionTime = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_retentionTime_get, _pwiz_swigbindings.ScanHeaderStruct_retentionTime_set)
    __swig_setmethods__["basePeakMZ"] = _pwiz_swigbindings.ScanHeaderStruct_basePeakMZ_set
    __swig_getmethods__["basePeakMZ"] = _pwiz_swigbindings.ScanHeaderStruct_basePeakMZ_get
    if _newclass:basePeakMZ = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_basePeakMZ_get, _pwiz_swigbindings.ScanHeaderStruct_basePeakMZ_set)
    __swig_setmethods__["basePeakIntensity"] = _pwiz_swigbindings.ScanHeaderStruct_basePeakIntensity_set
    __swig_getmethods__["basePeakIntensity"] = _pwiz_swigbindings.ScanHeaderStruct_basePeakIntensity_get
    if _newclass:basePeakIntensity = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_basePeakIntensity_get, _pwiz_swigbindings.ScanHeaderStruct_basePeakIntensity_set)
    __swig_setmethods__["collisionEnergy"] = _pwiz_swigbindings.ScanHeaderStruct_collisionEnergy_set
    __swig_getmethods__["collisionEnergy"] = _pwiz_swigbindings.ScanHeaderStruct_collisionEnergy_get
    if _newclass:collisionEnergy = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_collisionEnergy_get, _pwiz_swigbindings.ScanHeaderStruct_collisionEnergy_set)
    __swig_setmethods__["compensationVoltage"] = _pwiz_swigbindings.ScanHeaderStruct_compensationVoltage_set
    __swig_getmethods__["compensationVoltage"] = _pwiz_swigbindings.ScanHeaderStruct_compensationVoltage_get
    if _newclass:compensationVoltage = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_compensationVoltage_get, _pwiz_swigbindings.ScanHeaderStruct_compensationVoltage_set)
    __swig_setmethods__["ionisationEnergy"] = _pwiz_swigbindings.ScanHeaderStruct_ionisationEnergy_set
    __swig_getmethods__["ionisationEnergy"] = _pwiz_swigbindings.ScanHeaderStruct_ionisationEnergy_get
    if _newclass:ionisationEnergy = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_ionisationEnergy_get, _pwiz_swigbindings.ScanHeaderStruct_ionisationEnergy_set)
    __swig_setmethods__["lowMZ"] = _pwiz_swigbindings.ScanHeaderStruct_lowMZ_set
    __swig_getmethods__["lowMZ"] = _pwiz_swigbindings.ScanHeaderStruct_lowMZ_get
    if _newclass:lowMZ = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_lowMZ_get, _pwiz_swigbindings.ScanHeaderStruct_lowMZ_set)
    __swig_setmethods__["highMZ"] = _pwiz_swigbindings.ScanHeaderStruct_highMZ_set
    __swig_getmethods__["highMZ"] = _pwiz_swigbindings.ScanHeaderStruct_highMZ_get
    if _newclass:highMZ = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_highMZ_get, _pwiz_swigbindings.ScanHeaderStruct_highMZ_set)
    __swig_setmethods__["precursorScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_precursorScanNum_set
    __swig_getmethods__["precursorScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_precursorScanNum_get
    if _newclass:precursorScanNum = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_precursorScanNum_get, _pwiz_swigbindings.ScanHeaderStruct_precursorScanNum_set)
    __swig_setmethods__["precursorMZ"] = _pwiz_swigbindings.ScanHeaderStruct_precursorMZ_set
    __swig_getmethods__["precursorMZ"] = _pwiz_swigbindings.ScanHeaderStruct_precursorMZ_get
    if _newclass:precursorMZ = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_precursorMZ_get, _pwiz_swigbindings.ScanHeaderStruct_precursorMZ_set)
    __swig_setmethods__["precursorCharge"] = _pwiz_swigbindings.ScanHeaderStruct_precursorCharge_set
    __swig_getmethods__["precursorCharge"] = _pwiz_swigbindings.ScanHeaderStruct_precursorCharge_get
    if _newclass:precursorCharge = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_precursorCharge_get, _pwiz_swigbindings.ScanHeaderStruct_precursorCharge_set)
    __swig_setmethods__["precursorIntensity"] = _pwiz_swigbindings.ScanHeaderStruct_precursorIntensity_set
    __swig_getmethods__["precursorIntensity"] = _pwiz_swigbindings.ScanHeaderStruct_precursorIntensity_get
    if _newclass:precursorIntensity = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_precursorIntensity_get, _pwiz_swigbindings.ScanHeaderStruct_precursorIntensity_set)
    __swig_setmethods__["scanType"] = _pwiz_swigbindings.ScanHeaderStruct_scanType_set
    __swig_getmethods__["scanType"] = _pwiz_swigbindings.ScanHeaderStruct_scanType_get
    if _newclass:scanType = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_scanType_get, _pwiz_swigbindings.ScanHeaderStruct_scanType_set)
    __swig_setmethods__["activationMethod"] = _pwiz_swigbindings.ScanHeaderStruct_activationMethod_set
    __swig_getmethods__["activationMethod"] = _pwiz_swigbindings.ScanHeaderStruct_activationMethod_get
    if _newclass:activationMethod = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_activationMethod_get, _pwiz_swigbindings.ScanHeaderStruct_activationMethod_set)
    __swig_setmethods__["possibleCharges"] = _pwiz_swigbindings.ScanHeaderStruct_possibleCharges_set
    __swig_getmethods__["possibleCharges"] = _pwiz_swigbindings.ScanHeaderStruct_possibleCharges_get
    if _newclass:possibleCharges = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_possibleCharges_get, _pwiz_swigbindings.ScanHeaderStruct_possibleCharges_set)
    __swig_setmethods__["numPossibleCharges"] = _pwiz_swigbindings.ScanHeaderStruct_numPossibleCharges_set
    __swig_getmethods__["numPossibleCharges"] = _pwiz_swigbindings.ScanHeaderStruct_numPossibleCharges_get
    if _newclass:numPossibleCharges = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_numPossibleCharges_get, _pwiz_swigbindings.ScanHeaderStruct_numPossibleCharges_set)
    __swig_setmethods__["possibleChargesArray"] = _pwiz_swigbindings.ScanHeaderStruct_possibleChargesArray_set
    __swig_getmethods__["possibleChargesArray"] = _pwiz_swigbindings.ScanHeaderStruct_possibleChargesArray_get
    if _newclass:possibleChargesArray = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_possibleChargesArray_get, _pwiz_swigbindings.ScanHeaderStruct_possibleChargesArray_set)
    __swig_setmethods__["mergedScan"] = _pwiz_swigbindings.ScanHeaderStruct_mergedScan_set
    __swig_getmethods__["mergedScan"] = _pwiz_swigbindings.ScanHeaderStruct_mergedScan_get
    if _newclass:mergedScan = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_mergedScan_get, _pwiz_swigbindings.ScanHeaderStruct_mergedScan_set)
    __swig_setmethods__["mergedResultScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_mergedResultScanNum_set
    __swig_getmethods__["mergedResultScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_mergedResultScanNum_get
    if _newclass:mergedResultScanNum = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_mergedResultScanNum_get, _pwiz_swigbindings.ScanHeaderStruct_mergedResultScanNum_set)
    __swig_setmethods__["mergedResultStartScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_mergedResultStartScanNum_set
    __swig_getmethods__["mergedResultStartScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_mergedResultStartScanNum_get
    if _newclass:mergedResultStartScanNum = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_mergedResultStartScanNum_get, _pwiz_swigbindings.ScanHeaderStruct_mergedResultStartScanNum_set)
    __swig_setmethods__["mergedResultEndScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_mergedResultEndScanNum_set
    __swig_getmethods__["mergedResultEndScanNum"] = _pwiz_swigbindings.ScanHeaderStruct_mergedResultEndScanNum_get
    if _newclass:mergedResultEndScanNum = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_mergedResultEndScanNum_get, _pwiz_swigbindings.ScanHeaderStruct_mergedResultEndScanNum_set)
    __swig_setmethods__["filePosition"] = _pwiz_swigbindings.ScanHeaderStruct_filePosition_set
    __swig_getmethods__["filePosition"] = _pwiz_swigbindings.ScanHeaderStruct_filePosition_get
    if _newclass:filePosition = _swig_property(_pwiz_swigbindings.ScanHeaderStruct_filePosition_get, _pwiz_swigbindings.ScanHeaderStruct_filePosition_set)
    def __init__(self): 
        this = _pwiz_swigbindings.new_ScanHeaderStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pwiz_swigbindings.delete_ScanHeaderStruct
    __del__ = lambda self : None;
ScanHeaderStruct_swigregister = _pwiz_swigbindings.ScanHeaderStruct_swigregister
ScanHeaderStruct_swigregister(ScanHeaderStruct)

class RunHeaderStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RunHeaderStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RunHeaderStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["scanCount"] = _pwiz_swigbindings.RunHeaderStruct_scanCount_set
    __swig_getmethods__["scanCount"] = _pwiz_swigbindings.RunHeaderStruct_scanCount_get
    if _newclass:scanCount = _swig_property(_pwiz_swigbindings.RunHeaderStruct_scanCount_get, _pwiz_swigbindings.RunHeaderStruct_scanCount_set)
    __swig_setmethods__["lowMZ"] = _pwiz_swigbindings.RunHeaderStruct_lowMZ_set
    __swig_getmethods__["lowMZ"] = _pwiz_swigbindings.RunHeaderStruct_lowMZ_get
    if _newclass:lowMZ = _swig_property(_pwiz_swigbindings.RunHeaderStruct_lowMZ_get, _pwiz_swigbindings.RunHeaderStruct_lowMZ_set)
    __swig_setmethods__["highMZ"] = _pwiz_swigbindings.RunHeaderStruct_highMZ_set
    __swig_getmethods__["highMZ"] = _pwiz_swigbindings.RunHeaderStruct_highMZ_get
    if _newclass:highMZ = _swig_property(_pwiz_swigbindings.RunHeaderStruct_highMZ_get, _pwiz_swigbindings.RunHeaderStruct_highMZ_set)
    __swig_setmethods__["startMZ"] = _pwiz_swigbindings.RunHeaderStruct_startMZ_set
    __swig_getmethods__["startMZ"] = _pwiz_swigbindings.RunHeaderStruct_startMZ_get
    if _newclass:startMZ = _swig_property(_pwiz_swigbindings.RunHeaderStruct_startMZ_get, _pwiz_swigbindings.RunHeaderStruct_startMZ_set)
    __swig_setmethods__["endMZ"] = _pwiz_swigbindings.RunHeaderStruct_endMZ_set
    __swig_getmethods__["endMZ"] = _pwiz_swigbindings.RunHeaderStruct_endMZ_get
    if _newclass:endMZ = _swig_property(_pwiz_swigbindings.RunHeaderStruct_endMZ_get, _pwiz_swigbindings.RunHeaderStruct_endMZ_set)
    __swig_setmethods__["dStartTime"] = _pwiz_swigbindings.RunHeaderStruct_dStartTime_set
    __swig_getmethods__["dStartTime"] = _pwiz_swigbindings.RunHeaderStruct_dStartTime_get
    if _newclass:dStartTime = _swig_property(_pwiz_swigbindings.RunHeaderStruct_dStartTime_get, _pwiz_swigbindings.RunHeaderStruct_dStartTime_set)
    __swig_setmethods__["dEndTime"] = _pwiz_swigbindings.RunHeaderStruct_dEndTime_set
    __swig_getmethods__["dEndTime"] = _pwiz_swigbindings.RunHeaderStruct_dEndTime_get
    if _newclass:dEndTime = _swig_property(_pwiz_swigbindings.RunHeaderStruct_dEndTime_get, _pwiz_swigbindings.RunHeaderStruct_dEndTime_set)
    def __init__(self): 
        this = _pwiz_swigbindings.new_RunHeaderStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pwiz_swigbindings.delete_RunHeaderStruct
    __del__ = lambda self : None;
RunHeaderStruct_swigregister = _pwiz_swigbindings.RunHeaderStruct_swigregister
RunHeaderStruct_swigregister(RunHeaderStruct)

class InstrumentStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InstrumentStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InstrumentStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["manufacturer"] = _pwiz_swigbindings.InstrumentStruct_manufacturer_set
    __swig_getmethods__["manufacturer"] = _pwiz_swigbindings.InstrumentStruct_manufacturer_get
    if _newclass:manufacturer = _swig_property(_pwiz_swigbindings.InstrumentStruct_manufacturer_get, _pwiz_swigbindings.InstrumentStruct_manufacturer_set)
    __swig_setmethods__["model"] = _pwiz_swigbindings.InstrumentStruct_model_set
    __swig_getmethods__["model"] = _pwiz_swigbindings.InstrumentStruct_model_get
    if _newclass:model = _swig_property(_pwiz_swigbindings.InstrumentStruct_model_get, _pwiz_swigbindings.InstrumentStruct_model_set)
    __swig_setmethods__["ionisation"] = _pwiz_swigbindings.InstrumentStruct_ionisation_set
    __swig_getmethods__["ionisation"] = _pwiz_swigbindings.InstrumentStruct_ionisation_get
    if _newclass:ionisation = _swig_property(_pwiz_swigbindings.InstrumentStruct_ionisation_get, _pwiz_swigbindings.InstrumentStruct_ionisation_set)
    __swig_setmethods__["analyzer"] = _pwiz_swigbindings.InstrumentStruct_analyzer_set
    __swig_getmethods__["analyzer"] = _pwiz_swigbindings.InstrumentStruct_analyzer_get
    if _newclass:analyzer = _swig_property(_pwiz_swigbindings.InstrumentStruct_analyzer_get, _pwiz_swigbindings.InstrumentStruct_analyzer_set)
    __swig_setmethods__["detector"] = _pwiz_swigbindings.InstrumentStruct_detector_set
    __swig_getmethods__["detector"] = _pwiz_swigbindings.InstrumentStruct_detector_get
    if _newclass:detector = _swig_property(_pwiz_swigbindings.InstrumentStruct_detector_get, _pwiz_swigbindings.InstrumentStruct_detector_set)
    def __init__(self): 
        this = _pwiz_swigbindings.new_InstrumentStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pwiz_swigbindings.delete_InstrumentStruct
    __del__ = lambda self : None;
InstrumentStruct_swigregister = _pwiz_swigbindings.InstrumentStruct_swigregister
InstrumentStruct_swigregister(InstrumentStruct)

class pwiz_RAMPAdapter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pwiz_RAMPAdapter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pwiz_RAMPAdapter, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pwiz_swigbindings.new_pwiz_RAMPAdapter(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pwiz_swigbindings.delete_pwiz_RAMPAdapter
    __del__ = lambda self : None;
    def scanCount(self): return _pwiz_swigbindings.pwiz_RAMPAdapter_scanCount(self)
    def index(self, *args): return _pwiz_swigbindings.pwiz_RAMPAdapter_index(self, *args)
    def getScanHeader(self, *args): return _pwiz_swigbindings.pwiz_RAMPAdapter_getScanHeader(self, *args)
    def getScanPeaks(self, *args): return _pwiz_swigbindings.pwiz_RAMPAdapter_getScanPeaks(self, *args)
    def getRunHeader(self, *args): return _pwiz_swigbindings.pwiz_RAMPAdapter_getRunHeader(self, *args)
    def getInstrument(self, *args): return _pwiz_swigbindings.pwiz_RAMPAdapter_getInstrument(self, *args)
pwiz_RAMPAdapter_swigregister = _pwiz_swigbindings.pwiz_RAMPAdapter_swigregister
pwiz_RAMPAdapter_swigregister(pwiz_RAMPAdapter)



